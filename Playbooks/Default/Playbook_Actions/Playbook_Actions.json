{
    "id": 0,
    "identifier": "f558d265-d126-46f2-8838-93ea6132cf46",
    "version": "1",
    "isEnabled": true,
    "isDebugMode": false,
    "name": "Playbook_Actions",
    "creator": "973d7959-bcd7-48fa-8b56-37fa8244951d",
    "modifiedBy": "973d7959-bcd7-48fa-8b56-37fa8244951d",
    "priority": 2,
    "description": "",
    "environments": [
        "*"
    ],
    "categoryName": "Default",
    "categoryId": 1,
    "originalPlaybookIdentifier": "f558d265-d126-46f2-8838-93ea6132cf46",
    "creationTimeUnixTimeInMs": 1751184291441,
    "modificationTimeUnixTimeInMs": 1751186024930,
    "trigger": {
        "id": 0,
        "identifier": "ca52f7a0-e03c-41b0-a203-e328ae20c36b",
        "type": 8,
        "logicalOperator": 0,
        "conditions": [
            {
                "fieldName": "",
                "value": "",
                "matchType": 0
            }
        ]
    },
    "steps": [
        {
            "parallelActions": [],
            "identifier": "2c4daba1-cbb3-49d1-a672-2517606ca642",
            "originalStepIdentifier": "2c4daba1-cbb3-49d1-a672-2517606ca642",
            "isAutomatic": true,
            "isSkippable": false,
            "instanceName": "VirusTotalV3_Get Related Domains_1",
            "name": "VirusTotalV3_Get Related Domains",
            "integration": "VirusTotalV3",
            "description": "Get related domains to the provided entities from VirusTotal. Note: this action requires a VT Enterprise token. Supported entities: IP, URL, Filehash, Hostname, Domain. Note: only MD5, SHA-1 and SHA-256 are supported.",
            "actionProvider": "Scripts",
            "actionName": "VirusTotalV3_Get Related Domains",
            "type": 0,
            "parameters": [
                {
                    "name": "AssignedUsers",
                    "value": null,
                    "type": null,
                    "isMandatory": false,
                    "defaultValue": null,
                    "id": 0,
                    "creationTimeUnixTimeInMs": 0,
                    "modificationTimeUnixTimeInMs": 0,
                    "additionalProperties": {}
                },
                {
                    "name": "DynamicInjectionInstancePlaceholder",
                    "value": "",
                    "type": null,
                    "isMandatory": false,
                    "defaultValue": null,
                    "id": 0,
                    "creationTimeUnixTimeInMs": 0,
                    "modificationTimeUnixTimeInMs": 0,
                    "additionalProperties": {}
                },
                {
                    "name": "FallbackIntegrationInstance",
                    "value": "74f874b3-c98a-413b-99bb-845f8fecc5c8",
                    "type": null,
                    "isMandatory": false,
                    "defaultValue": null,
                    "id": 0,
                    "creationTimeUnixTimeInMs": 0,
                    "modificationTimeUnixTimeInMs": 0,
                    "additionalProperties": {},
                    "FallbackInstanceDisplayName": "VirusTotalV3_4"
                },
                {
                    "name": "FetchInstanceByName",
                    "value": "false",
                    "type": null,
                    "isMandatory": false,
                    "defaultValue": null,
                    "id": 0,
                    "creationTimeUnixTimeInMs": 0,
                    "modificationTimeUnixTimeInMs": 0,
                    "additionalProperties": {}
                },
                {
                    "name": "HasApprovalLink",
                    "value": null,
                    "type": null,
                    "isMandatory": false,
                    "defaultValue": null,
                    "id": 0,
                    "creationTimeUnixTimeInMs": 0,
                    "modificationTimeUnixTimeInMs": 0,
                    "additionalProperties": {}
                },
                {
                    "name": "IntegrationInstance",
                    "value": "AutomaticEnvironment",
                    "type": null,
                    "isMandatory": false,
                    "defaultValue": null,
                    "id": 0,
                    "creationTimeUnixTimeInMs": 0,
                    "modificationTimeUnixTimeInMs": 0,
                    "additionalProperties": {}
                },
                {
                    "name": "MessageToAssignee",
                    "value": null,
                    "type": null,
                    "isMandatory": false,
                    "defaultValue": null,
                    "id": 0,
                    "creationTimeUnixTimeInMs": 0,
                    "modificationTimeUnixTimeInMs": 0,
                    "additionalProperties": {}
                },
                {
                    "name": "PendingActionTimeout",
                    "value": null,
                    "type": null,
                    "isMandatory": false,
                    "defaultValue": null,
                    "id": 0,
                    "creationTimeUnixTimeInMs": 0,
                    "modificationTimeUnixTimeInMs": 0,
                    "additionalProperties": {}
                },
                {
                    "name": "ScriptName",
                    "value": "VirusTotalV3_Get Related Domains",
                    "type": null,
                    "isMandatory": false,
                    "defaultValue": null,
                    "id": 0,
                    "creationTimeUnixTimeInMs": 0,
                    "modificationTimeUnixTimeInMs": 0,
                    "additionalProperties": {}
                },
                {
                    "name": "ScriptParametersEntityFields",
                    "value": "{\"Results\":\"Combined\",\"Max Domains To Return\":\"40\"}",
                    "type": null,
                    "isMandatory": false,
                    "defaultValue": null,
                    "id": 0,
                    "creationTimeUnixTimeInMs": 0,
                    "modificationTimeUnixTimeInMs": 0,
                    "additionalProperties": {}
                },
                {
                    "name": "SelectedScopeName",
                    "value": "All entities",
                    "type": null,
                    "isMandatory": false,
                    "defaultValue": null,
                    "id": 0,
                    "creationTimeUnixTimeInMs": 0,
                    "modificationTimeUnixTimeInMs": 0,
                    "additionalProperties": {}
                },
                {
                    "name": "UseEntitiesLoopScope",
                    "value": null,
                    "type": null,
                    "isMandatory": false,
                    "defaultValue": null,
                    "id": 0,
                    "creationTimeUnixTimeInMs": 0,
                    "modificationTimeUnixTimeInMs": 0,
                    "additionalProperties": {}
                }
            ],
            "autoSkipOnFailure": false,
            "isDebugMockData": false,
            "debugData": null,
            "parentStepContainerId": null,
            "workflowIdentifier": "f558d265-d126-46f2-8838-93ea6132cf46",
            "isTouchedByAi": false,
            "startLoopStepIdentifier": null,
            "id": 0,
            "creationTimeUnixTimeInMs": 1751186024930,
            "modificationTimeUnixTimeInMs": 1751186024930,
            "additionalProperties": {}
        },
        {
            "parallelActions": [],
            "identifier": "5d043f4f-43cc-4293-a642-6bcb77659ee4",
            "originalStepIdentifier": "5d043f4f-43cc-4293-a642-6bcb77659ee4",
            "isAutomatic": true,
            "isSkippable": false,
            "instanceName": "VirusTotalV3_Add Comment To Entity_1",
            "name": "VirusTotalV3_Add Comment To Entity",
            "integration": "VirusTotalV3",
            "description": "Add a comment to entities in VirusTotal. Supported entities: File Hash, URL, Hostname, Domain, IP Address. Note: only MD5, SHA-1 and SHA-256 Hash types are supported",
            "actionProvider": "Scripts",
            "actionName": "VirusTotalV3_Add Comment To Entity",
            "type": 0,
            "parameters": [
                {
                    "name": "AssignedUsers",
                    "value": null,
                    "type": null,
                    "isMandatory": false,
                    "defaultValue": null,
                    "id": 0,
                    "creationTimeUnixTimeInMs": 0,
                    "modificationTimeUnixTimeInMs": 0,
                    "additionalProperties": {}
                },
                {
                    "name": "DynamicInjectionInstancePlaceholder",
                    "value": "",
                    "type": null,
                    "isMandatory": false,
                    "defaultValue": null,
                    "id": 0,
                    "creationTimeUnixTimeInMs": 0,
                    "modificationTimeUnixTimeInMs": 0,
                    "additionalProperties": {}
                },
                {
                    "name": "FallbackIntegrationInstance",
                    "value": "4cdfc6ec-859a-4c1c-a3de-cd62739b8c50",
                    "type": null,
                    "isMandatory": false,
                    "defaultValue": null,
                    "id": 0,
                    "creationTimeUnixTimeInMs": 0,
                    "modificationTimeUnixTimeInMs": 0,
                    "additionalProperties": {},
                    "FallbackInstanceDisplayName": "VirusTotalV3_1"
                },
                {
                    "name": "FetchInstanceByName",
                    "value": "false",
                    "type": null,
                    "isMandatory": false,
                    "defaultValue": null,
                    "id": 0,
                    "creationTimeUnixTimeInMs": 0,
                    "modificationTimeUnixTimeInMs": 0,
                    "additionalProperties": {}
                },
                {
                    "name": "HasApprovalLink",
                    "value": null,
                    "type": null,
                    "isMandatory": false,
                    "defaultValue": null,
                    "id": 0,
                    "creationTimeUnixTimeInMs": 0,
                    "modificationTimeUnixTimeInMs": 0,
                    "additionalProperties": {}
                },
                {
                    "name": "IntegrationInstance",
                    "value": "AutomaticEnvironment",
                    "type": null,
                    "isMandatory": false,
                    "defaultValue": null,
                    "id": 0,
                    "creationTimeUnixTimeInMs": 0,
                    "modificationTimeUnixTimeInMs": 0,
                    "additionalProperties": {}
                },
                {
                    "name": "MessageToAssignee",
                    "value": null,
                    "type": null,
                    "isMandatory": false,
                    "defaultValue": null,
                    "id": 0,
                    "creationTimeUnixTimeInMs": 0,
                    "modificationTimeUnixTimeInMs": 0,
                    "additionalProperties": {}
                },
                {
                    "name": "PendingActionTimeout",
                    "value": null,
                    "type": null,
                    "isMandatory": false,
                    "defaultValue": null,
                    "id": 0,
                    "creationTimeUnixTimeInMs": 0,
                    "modificationTimeUnixTimeInMs": 0,
                    "additionalProperties": {}
                },
                {
                    "name": "ScriptName",
                    "value": "VirusTotalV3_Add Comment To Entity",
                    "type": null,
                    "isMandatory": false,
                    "defaultValue": null,
                    "id": 0,
                    "creationTimeUnixTimeInMs": 0,
                    "modificationTimeUnixTimeInMs": 0,
                    "additionalProperties": {}
                },
                {
                    "name": "ScriptParametersEntityFields",
                    "value": "{\"Comment\":\"comments\"}",
                    "type": null,
                    "isMandatory": false,
                    "defaultValue": null,
                    "id": 0,
                    "creationTimeUnixTimeInMs": 0,
                    "modificationTimeUnixTimeInMs": 0,
                    "additionalProperties": {}
                },
                {
                    "name": "SelectedScopeName",
                    "value": "All entities",
                    "type": null,
                    "isMandatory": false,
                    "defaultValue": null,
                    "id": 0,
                    "creationTimeUnixTimeInMs": 0,
                    "modificationTimeUnixTimeInMs": 0,
                    "additionalProperties": {}
                },
                {
                    "name": "UseEntitiesLoopScope",
                    "value": null,
                    "type": null,
                    "isMandatory": false,
                    "defaultValue": null,
                    "id": 0,
                    "creationTimeUnixTimeInMs": 0,
                    "modificationTimeUnixTimeInMs": 0,
                    "additionalProperties": {}
                }
            ],
            "autoSkipOnFailure": false,
            "isDebugMockData": false,
            "debugData": null,
            "parentStepContainerId": null,
            "workflowIdentifier": "f558d265-d126-46f2-8838-93ea6132cf46",
            "isTouchedByAi": false,
            "startLoopStepIdentifier": null,
            "id": 0,
            "creationTimeUnixTimeInMs": 1751186024785,
            "modificationTimeUnixTimeInMs": 1751186024930,
            "additionalProperties": {}
        },
        {
            "parallelActions": [],
            "identifier": "819e4f8e-04c5-435b-a29f-8711541e84a3",
            "originalStepIdentifier": "819e4f8e-04c5-435b-a29f-8711541e84a3",
            "isAutomatic": true,
            "isSkippable": false,
            "instanceName": "VirusTotalV3_Get Domain Details_1",
            "name": "VirusTotalV3_Get Domain Details",
            "integration": "VirusTotalV3",
            "description": "Get detailed information about the domain using information from VirusTotal. Supported entities: URL (entity extracts domain part), Hostname, Domain.",
            "actionProvider": "Scripts",
            "actionName": "VirusTotalV3_Get Domain Details",
            "type": 0,
            "parameters": [
                {
                    "name": "AssignedUsers",
                    "value": null,
                    "type": null,
                    "isMandatory": false,
                    "defaultValue": null,
                    "id": 0,
                    "creationTimeUnixTimeInMs": 0,
                    "modificationTimeUnixTimeInMs": 0,
                    "additionalProperties": {}
                },
                {
                    "name": "DynamicInjectionInstancePlaceholder",
                    "value": "",
                    "type": null,
                    "isMandatory": false,
                    "defaultValue": null,
                    "id": 0,
                    "creationTimeUnixTimeInMs": 0,
                    "modificationTimeUnixTimeInMs": 0,
                    "additionalProperties": {}
                },
                {
                    "name": "FallbackIntegrationInstance",
                    "value": "6ee89512-5e26-4225-8a1b-ff789b563d81",
                    "type": null,
                    "isMandatory": false,
                    "defaultValue": null,
                    "id": 0,
                    "creationTimeUnixTimeInMs": 0,
                    "modificationTimeUnixTimeInMs": 0,
                    "additionalProperties": {},
                    "FallbackInstanceDisplayName": "VirusTotalV3_2"
                },
                {
                    "name": "FetchInstanceByName",
                    "value": "false",
                    "type": null,
                    "isMandatory": false,
                    "defaultValue": null,
                    "id": 0,
                    "creationTimeUnixTimeInMs": 0,
                    "modificationTimeUnixTimeInMs": 0,
                    "additionalProperties": {}
                },
                {
                    "name": "HasApprovalLink",
                    "value": null,
                    "type": null,
                    "isMandatory": false,
                    "defaultValue": null,
                    "id": 0,
                    "creationTimeUnixTimeInMs": 0,
                    "modificationTimeUnixTimeInMs": 0,
                    "additionalProperties": {}
                },
                {
                    "name": "IntegrationInstance",
                    "value": "AutomaticEnvironment",
                    "type": null,
                    "isMandatory": false,
                    "defaultValue": null,
                    "id": 0,
                    "creationTimeUnixTimeInMs": 0,
                    "modificationTimeUnixTimeInMs": 0,
                    "additionalProperties": {}
                },
                {
                    "name": "MessageToAssignee",
                    "value": null,
                    "type": null,
                    "isMandatory": false,
                    "defaultValue": null,
                    "id": 0,
                    "creationTimeUnixTimeInMs": 0,
                    "modificationTimeUnixTimeInMs": 0,
                    "additionalProperties": {}
                },
                {
                    "name": "PendingActionTimeout",
                    "value": null,
                    "type": null,
                    "isMandatory": false,
                    "defaultValue": null,
                    "id": 0,
                    "creationTimeUnixTimeInMs": 0,
                    "modificationTimeUnixTimeInMs": 0,
                    "additionalProperties": {}
                },
                {
                    "name": "ScriptName",
                    "value": "VirusTotalV3_Get Domain Details",
                    "type": null,
                    "isMandatory": false,
                    "defaultValue": null,
                    "id": 0,
                    "creationTimeUnixTimeInMs": 0,
                    "modificationTimeUnixTimeInMs": 0,
                    "additionalProperties": {}
                },
                {
                    "name": "ScriptParametersEntityFields",
                    "value": "{\"Engine Threshold\":\"1\",\"Engine Percentage Threshold\":\"1\",\"Engine Whitelist\":\"\",\"Retrieve Comments\":true,\"Create Insight\":true,\"Only Suspicious Entity Insight\":false,\"Max Comments To Return\":\"10\",\"Widget Theme\":\"Dark\",\"Fetch Widget\":true}",
                    "type": null,
                    "isMandatory": false,
                    "defaultValue": null,
                    "id": 0,
                    "creationTimeUnixTimeInMs": 0,
                    "modificationTimeUnixTimeInMs": 0,
                    "additionalProperties": {}
                },
                {
                    "name": "SelectedScopeName",
                    "value": "All entities",
                    "type": null,
                    "isMandatory": false,
                    "defaultValue": null,
                    "id": 0,
                    "creationTimeUnixTimeInMs": 0,
                    "modificationTimeUnixTimeInMs": 0,
                    "additionalProperties": {}
                },
                {
                    "name": "UseEntitiesLoopScope",
                    "value": null,
                    "type": null,
                    "isMandatory": false,
                    "defaultValue": null,
                    "id": 0,
                    "creationTimeUnixTimeInMs": 0,
                    "modificationTimeUnixTimeInMs": 0,
                    "additionalProperties": {}
                }
            ],
            "autoSkipOnFailure": false,
            "isDebugMockData": false,
            "debugData": null,
            "parentStepContainerId": null,
            "workflowIdentifier": "f558d265-d126-46f2-8838-93ea6132cf46",
            "isTouchedByAi": false,
            "startLoopStepIdentifier": null,
            "id": 0,
            "creationTimeUnixTimeInMs": 1751186024785,
            "modificationTimeUnixTimeInMs": 1751186024930,
            "additionalProperties": {}
        },
        {
            "parallelActions": [],
            "identifier": "f8b14ee3-cc82-4d51-aa66-21cd3b24ba54",
            "originalStepIdentifier": "f8b14ee3-cc82-4d51-aa66-21cd3b24ba54",
            "isAutomatic": true,
            "isSkippable": false,
            "instanceName": "VirusTotalV3_Enrich Hash_1",
            "name": "VirusTotalV3_Enrich Hash",
            "integration": "VirusTotalV3",
            "description": "Enrich Hash using information from VirusTotal. Supported entities: Filehash. Note: only MD5, SHA-1 and SHA-256 are supported.",
            "actionProvider": "Scripts",
            "actionName": "VirusTotalV3_Enrich Hash",
            "type": 0,
            "parameters": [
                {
                    "name": "AssignedUsers",
                    "value": null,
                    "type": null,
                    "isMandatory": false,
                    "defaultValue": null,
                    "id": 0,
                    "creationTimeUnixTimeInMs": 0,
                    "modificationTimeUnixTimeInMs": 0,
                    "additionalProperties": {}
                },
                {
                    "name": "AsyncActionTimeout",
                    "value": "86400",
                    "type": null,
                    "isMandatory": false,
                    "defaultValue": null,
                    "id": 0,
                    "creationTimeUnixTimeInMs": 0,
                    "modificationTimeUnixTimeInMs": 0,
                    "additionalProperties": {}
                },
                {
                    "name": "AsyncPollingInterval",
                    "value": "3600",
                    "type": null,
                    "isMandatory": false,
                    "defaultValue": null,
                    "id": 0,
                    "creationTimeUnixTimeInMs": 0,
                    "modificationTimeUnixTimeInMs": 0,
                    "additionalProperties": {}
                },
                {
                    "name": "DynamicInjectionInstancePlaceholder",
                    "value": "",
                    "type": null,
                    "isMandatory": false,
                    "defaultValue": null,
                    "id": 0,
                    "creationTimeUnixTimeInMs": 0,
                    "modificationTimeUnixTimeInMs": 0,
                    "additionalProperties": {}
                },
                {
                    "name": "FallbackIntegrationInstance",
                    "value": "6ee89512-5e26-4225-8a1b-ff789b563d81",
                    "type": null,
                    "isMandatory": false,
                    "defaultValue": null,
                    "id": 0,
                    "creationTimeUnixTimeInMs": 0,
                    "modificationTimeUnixTimeInMs": 0,
                    "additionalProperties": {},
                    "FallbackInstanceDisplayName": "VirusTotalV3_2"
                },
                {
                    "name": "FetchInstanceByName",
                    "value": "false",
                    "type": null,
                    "isMandatory": false,
                    "defaultValue": null,
                    "id": 0,
                    "creationTimeUnixTimeInMs": 0,
                    "modificationTimeUnixTimeInMs": 0,
                    "additionalProperties": {}
                },
                {
                    "name": "HasApprovalLink",
                    "value": null,
                    "type": null,
                    "isMandatory": false,
                    "defaultValue": null,
                    "id": 0,
                    "creationTimeUnixTimeInMs": 0,
                    "modificationTimeUnixTimeInMs": 0,
                    "additionalProperties": {}
                },
                {
                    "name": "IntegrationInstance",
                    "value": "AutomaticEnvironment",
                    "type": null,
                    "isMandatory": false,
                    "defaultValue": null,
                    "id": 0,
                    "creationTimeUnixTimeInMs": 0,
                    "modificationTimeUnixTimeInMs": 0,
                    "additionalProperties": {}
                },
                {
                    "name": "MessageToAssignee",
                    "value": null,
                    "type": null,
                    "isMandatory": false,
                    "defaultValue": null,
                    "id": 0,
                    "creationTimeUnixTimeInMs": 0,
                    "modificationTimeUnixTimeInMs": 0,
                    "additionalProperties": {}
                },
                {
                    "name": "PendingActionTimeout",
                    "value": null,
                    "type": null,
                    "isMandatory": false,
                    "defaultValue": null,
                    "id": 0,
                    "creationTimeUnixTimeInMs": 0,
                    "modificationTimeUnixTimeInMs": 0,
                    "additionalProperties": {}
                },
                {
                    "name": "ScriptName",
                    "value": "VirusTotalV3_Enrich Hash",
                    "type": null,
                    "isMandatory": false,
                    "defaultValue": null,
                    "id": 0,
                    "creationTimeUnixTimeInMs": 0,
                    "modificationTimeUnixTimeInMs": 0,
                    "additionalProperties": {}
                },
                {
                    "name": "ScriptParametersEntityFields",
                    "value": "{\"Engine Threshold\":\"1\",\"Engine Percentage Threshold\":\"1\",\"Engine Whitelist\":\"\",\"Resubmit Hash\":false,\"Resubmit After (Days)\":\"30\",\"Retrieve Comments\":true,\"Retrieve Sigma Analysis\":true,\"Sandbox\":\"VirusTotal Jujubox\",\"Retrieve Sandbox Analysis\":true,\"Create Insight\":true,\"Only Suspicious Entity Insight\":false,\"Max Comments To Return\":\"10\",\"Widget Theme\":\"Dark\",\"Fetch Widget\":true,\"Fetch MITRE Details\":false,\"Lowest MITRE Technique Severity\":\"Low\"}",
                    "type": null,
                    "isMandatory": false,
                    "defaultValue": null,
                    "id": 0,
                    "creationTimeUnixTimeInMs": 0,
                    "modificationTimeUnixTimeInMs": 0,
                    "additionalProperties": {}
                },
                {
                    "name": "SelectedScopeName",
                    "value": "All entities",
                    "type": null,
                    "isMandatory": false,
                    "defaultValue": null,
                    "id": 0,
                    "creationTimeUnixTimeInMs": 0,
                    "modificationTimeUnixTimeInMs": 0,
                    "additionalProperties": {}
                },
                {
                    "name": "UseEntitiesLoopScope",
                    "value": null,
                    "type": null,
                    "isMandatory": false,
                    "defaultValue": null,
                    "id": 0,
                    "creationTimeUnixTimeInMs": 0,
                    "modificationTimeUnixTimeInMs": 0,
                    "additionalProperties": {}
                }
            ],
            "autoSkipOnFailure": false,
            "isDebugMockData": false,
            "debugData": null,
            "parentStepContainerId": null,
            "workflowIdentifier": "f558d265-d126-46f2-8838-93ea6132cf46",
            "isTouchedByAi": false,
            "startLoopStepIdentifier": null,
            "id": 0,
            "creationTimeUnixTimeInMs": 1751186024785,
            "modificationTimeUnixTimeInMs": 1751186024930,
            "additionalProperties": {}
        },
        {
            "parallelActions": [],
            "identifier": "fe5a99e9-c6ec-4010-8e85-3e9442ca7190",
            "originalStepIdentifier": "fe5a99e9-c6ec-4010-8e85-3e9442ca7190",
            "isAutomatic": true,
            "isSkippable": false,
            "instanceName": "VirusTotalV3_Add Vote To Entity_1",
            "name": "VirusTotalV3_Add Vote To Entity",
            "integration": "VirusTotalV3",
            "description": "Add a vote to entities in VirusTotal. Supported entities: File Hash, URL, Hostname, Domain, IP Address. Note: only MD5, SHA-1 and SHA-256 Hash types are supported",
            "actionProvider": "Scripts",
            "actionName": "VirusTotalV3_Add Vote To Entity",
            "type": 0,
            "parameters": [
                {
                    "name": "AssignedUsers",
                    "value": null,
                    "type": null,
                    "isMandatory": false,
                    "defaultValue": null,
                    "id": 0,
                    "creationTimeUnixTimeInMs": 0,
                    "modificationTimeUnixTimeInMs": 0,
                    "additionalProperties": {}
                },
                {
                    "name": "DynamicInjectionInstancePlaceholder",
                    "value": "",
                    "type": null,
                    "isMandatory": false,
                    "defaultValue": null,
                    "id": 0,
                    "creationTimeUnixTimeInMs": 0,
                    "modificationTimeUnixTimeInMs": 0,
                    "additionalProperties": {}
                },
                {
                    "name": "FallbackIntegrationInstance",
                    "value": "4cdfc6ec-859a-4c1c-a3de-cd62739b8c50",
                    "type": null,
                    "isMandatory": false,
                    "defaultValue": null,
                    "id": 0,
                    "creationTimeUnixTimeInMs": 0,
                    "modificationTimeUnixTimeInMs": 0,
                    "additionalProperties": {},
                    "FallbackInstanceDisplayName": "VirusTotalV3_1"
                },
                {
                    "name": "FetchInstanceByName",
                    "value": "false",
                    "type": null,
                    "isMandatory": false,
                    "defaultValue": null,
                    "id": 0,
                    "creationTimeUnixTimeInMs": 0,
                    "modificationTimeUnixTimeInMs": 0,
                    "additionalProperties": {}
                },
                {
                    "name": "HasApprovalLink",
                    "value": null,
                    "type": null,
                    "isMandatory": false,
                    "defaultValue": null,
                    "id": 0,
                    "creationTimeUnixTimeInMs": 0,
                    "modificationTimeUnixTimeInMs": 0,
                    "additionalProperties": {}
                },
                {
                    "name": "IntegrationInstance",
                    "value": "AutomaticEnvironment",
                    "type": null,
                    "isMandatory": false,
                    "defaultValue": null,
                    "id": 0,
                    "creationTimeUnixTimeInMs": 0,
                    "modificationTimeUnixTimeInMs": 0,
                    "additionalProperties": {}
                },
                {
                    "name": "MessageToAssignee",
                    "value": null,
                    "type": null,
                    "isMandatory": false,
                    "defaultValue": null,
                    "id": 0,
                    "creationTimeUnixTimeInMs": 0,
                    "modificationTimeUnixTimeInMs": 0,
                    "additionalProperties": {}
                },
                {
                    "name": "PendingActionTimeout",
                    "value": null,
                    "type": null,
                    "isMandatory": false,
                    "defaultValue": null,
                    "id": 0,
                    "creationTimeUnixTimeInMs": 0,
                    "modificationTimeUnixTimeInMs": 0,
                    "additionalProperties": {}
                },
                {
                    "name": "ScriptName",
                    "value": "VirusTotalV3_Add Vote To Entity",
                    "type": null,
                    "isMandatory": false,
                    "defaultValue": null,
                    "id": 0,
                    "creationTimeUnixTimeInMs": 0,
                    "modificationTimeUnixTimeInMs": 0,
                    "additionalProperties": {}
                },
                {
                    "name": "ScriptParametersEntityFields",
                    "value": "{\"Vote\":\"Malicious\"}",
                    "type": null,
                    "isMandatory": false,
                    "defaultValue": null,
                    "id": 0,
                    "creationTimeUnixTimeInMs": 0,
                    "modificationTimeUnixTimeInMs": 0,
                    "additionalProperties": {}
                },
                {
                    "name": "SelectedScopeName",
                    "value": "All entities",
                    "type": null,
                    "isMandatory": false,
                    "defaultValue": null,
                    "id": 0,
                    "creationTimeUnixTimeInMs": 0,
                    "modificationTimeUnixTimeInMs": 0,
                    "additionalProperties": {}
                },
                {
                    "name": "UseEntitiesLoopScope",
                    "value": null,
                    "type": null,
                    "isMandatory": false,
                    "defaultValue": null,
                    "id": 0,
                    "creationTimeUnixTimeInMs": 0,
                    "modificationTimeUnixTimeInMs": 0,
                    "additionalProperties": {}
                }
            ],
            "autoSkipOnFailure": false,
            "isDebugMockData": false,
            "debugData": null,
            "parentStepContainerId": null,
            "workflowIdentifier": "f558d265-d126-46f2-8838-93ea6132cf46",
            "isTouchedByAi": false,
            "startLoopStepIdentifier": null,
            "id": 0,
            "creationTimeUnixTimeInMs": 1751186024785,
            "modificationTimeUnixTimeInMs": 1751186024930,
            "additionalProperties": {}
        }
    ],
    "stepsRelations": [
        {
            "condition": "",
            "fromStep": "819e4f8e-04c5-435b-a29f-8711541e84a3",
            "toStep": "2c4daba1-cbb3-49d1-a672-2517606ca642",
            "destinationActionStatus": 0
        },
        {
            "condition": "",
            "fromStep": "f8b14ee3-cc82-4d51-aa66-21cd3b24ba54",
            "toStep": "819e4f8e-04c5-435b-a29f-8711541e84a3",
            "destinationActionStatus": 0
        },
        {
            "condition": "",
            "fromStep": "fe5a99e9-c6ec-4010-8e85-3e9442ca7190",
            "toStep": "f8b14ee3-cc82-4d51-aa66-21cd3b24ba54",
            "destinationActionStatus": 0
        },
        {
            "condition": "",
            "fromStep": "5d043f4f-43cc-4293-a642-6bcb77659ee4",
            "toStep": "fe5a99e9-c6ec-4010-8e85-3e9442ca7190",
            "destinationActionStatus": 0
        }
    ],
    "templateName": null,
    "playbookType": 0,
    "debugData": {
        "debugBaseAlertId": null,
        "debugAlertId": null
    },
    "entityAccessLevel": 2,
    "defaultAccessLevel": 2,
    "permissions": [],
    "overviewTemplates": [
        {
            "id": 3,
            "identifier": "283fde24-45ef-453d-be38-2202d11532f7",
            "name": "Widgets",
            "creator": null,
            "playbookIdentifier": "f558d265-d126-46f2-8838-93ea6132cf46",
            "type": 0,
            "widgets": [
                {
                    "metadata": {
                        "id": 18,
                        "identifier": "080f5303-43c6-4a38-aec8-dfa23934d543",
                        "title": "VirusTotalV3_Add Comment To Entity_1",
                        "width": 1,
                        "order": 1,
                        "description": "This widget highlights the most important items in Add Comment To Entity",
                        "type": 3,
                        "templateIdentifier": "283fde24-45ef-453d-be38-2202d11532f7",
                        "predefinedWidgetTemplateIdentifier": "a5f6459d-912b-440f-856f-d23815db84e8",
                        "actionIdentifier": null,
                        "stepIdentifier": "5d043f4f-43cc-4293-a642-6bcb77659ee4",
                        "stepIntegration": null,
                        "blockStepIdentifier": null,
                        "blockStepInstanceName": null,
                        "presentIfEmpty": false,
                        "conditionsGroup": {
                            "conditions": [
                                {
                                    "fieldName": "[{stepInstanceName}.JsonResult]",
                                    "matchType": 2,
                                    "value": "["
                                },
                                {
                                    "fieldName": "[{stepInstanceName}.JsonResult]",
                                    "matchType": 1,
                                    "value": "{"
                                },
                                {
                                    "fieldName": "[{stepInstanceName}.JsonResult]",
                                    "matchType": 1,
                                    "value": "Entity"
                                },
                                {
                                    "fieldName": "[{stepInstanceName}.JsonResult]",
                                    "matchType": 1,
                                    "value": "EntityResult"
                                }
                            ],
                            "logicalOperator": 0
                        },
                        "integrationName": "VirusTotalV3",
                        "isSupported": null
                    },
                    "config": {
                        "htmlContent": "<!-- Widget created by Enrichment Template / Version 1.0 / 11.07.2024 -->\n<!DOCTYPE html>\n<html lang=\"en\">\n <head>\n  <meta charset=\"utf-8\"/>\n  <meta content=\"width=device-width, initial-scale=1.0\" name=\"viewport\"/>\n  <link href=\"https://fonts.googleapis.com/css?family=Open+Sans:400,400i,700,700i\" rel=\"stylesheet\"/>\n  <link href=\"https://fonts.googleapis.com/css?family=Source Sans Pro\" rel=\"stylesheet\"/>\n  <title>\n   VirusTotalV3 - Add Comment To Entity\n  </title>\n  <style>\n   /* Root Variables */\n    :root {\n      --widget-bg: rgb(33, 44, 68);\n      --widget-font-family: 'Source Sans Pro', sans-serif;\n      --widget-text-color: rgb(255, 255, 255);\n      --widget-scrollbar-size: 12px;\n      --widget-row-highlight-bg: rgb(47 61 91);\n\n      /*Logo styles*/\n      --logo-size: 48px;\n      --logo-color: rgb(255, 255, 255);\n      /*Logo styles*/\n\n      --divider-border-colcor: rgb(98, 117, 163);\n      --divider-border-width: 1px;\n\n      --header-title-font: 600 16px/22px var(--widget-font-family);\n      --list-item-key-font: 600 14px/18px var(--widget-font-family);\n      --list-item-value-font: 400 14px/18px var(--widget-font-family);\n      --additional-title-font: 600 14px/18px var(--widget-font-family);\n\n      /*Sidebar styles*/\n      --sidebar-width: 167px;\n      --sidebar-item-text-style: 400 14px/18px var(--widget-font-family);\n      --sidebar-item-text-style-active: 600 14px/16px var(--widget-font-family);\n      --sidebar-item-active-bg: rgb(58, 74, 108);\n      --sidebar-item-padding: 10px;\n\n      /*Table styles*/\n      --table-color-even-row: rgb(26 32 50);\n      --table-title-size: 600 14px/18px var(--widget-font-family);\n      --table-th-size: 600 14px/18px var(--widget-font-family);\n      --table-td-size: 400 14px/18px var(--widget-font-family);\n    }\n\n    /*Normalize CSS */\n    * {\n      margin: 0;\n      padding: 0;\n      outline: none;\n      box-sizing: border-box;\n    }\n\n    *:hover, *:focus, *:active {\n      outline: none;\n    }\n\n    table {\n      width: 100%;\n      border-collapse: collapse;\n      border-spacing: 0;\n    }\n\n    ol, ul {\n      list-style: none;\n    }\n\n    button,\n    input,\n    textarea {\n      font-family: inherit;\n      background: transparent;\n      border: 0;\n      color: inherit;\n      text-align: left;\n    }\n\n    button, a[href] {\n      cursor: pointer;\n    }\n\n    /*Normalize CSS */\n\n\n    /* Custom Scrollbar */\n    ::-webkit-scrollbar {\n      width: 18px;\n      height: 18px;\n    }\n\n    ::-webkit-scrollbar-thumb {\n      background: rgba(137, 151, 180, 1);\n      border: 6px solid var(--widget-bg);\n      border-radius: 63px;\n    }\n\n    ::-webkit-scrollbar-track {\n      background: transparent;\n      border: 4px solid transparent;\n      border-radius: 44px;\n    }\n\n    ::-webkit-scrollbar-corner {\n      background-color: transparent;\n      border-color: transparent;\n    }\n\n    body {\n      font-family: var(--widget-font-family), serif;\n      color: var(--widget-text-color);\n      background-color: var(--widget-bg);\n      overflow: hidden;\n    }\n\n    /*Global styles*/\n    .text-ellipsis {\n      overflow: hidden;\n      text-overflow: ellipsis;\n      white-space: nowrap;\n    }\n\n    .divider-border-style {\n      border: 0;\n      border-color: var(--divider-border-colcor);\n      border-style: solid;\n    }\n\n    .tooltip {\n      max-width: 100%;\n      position: absolute;\n      padding: 8px 16px 8px 16px;\n      border-radius: 4px;\n      background-color: rgb(204 204 218);\n      color: rgb(22, 22, 37);\n      font: 400 14px/18px var(--widget-font-family);\n      z-index: 9;\n      word-wrap: break-word;\n    }\n\n    .tooltip-triangle {\n      position: absolute;\n      top: 100%;\n      border-top: solid 8px rgb(195, 210, 232);\n      border-left: solid 8px transparent;\n      border-right: solid 8px transparent;\n    }\n\n    .input {\n      border: 1px solid #6275A3;\n      border-radius: 4px;\n      padding: 4px 8px;\n      background-color: transparent;\n      font-size: 14px;\n      color: var(--widget-text-color);\n    }\n\n    .input::placeholder {\n      color: var(--widget-text-color);\n    }\n\n    /*Global styles*/\n\n    .wrapper {\n      display: flex;\n      height: 100vh;\n    }\n\n    /*left sidebar*/\n    .left-side {\n      min-width: var(--sidebar-width);\n      max-width: var(--sidebar-width);\n      overflow-y: auto;\n      padding-right: 6px;\n      border-right-width: var(--divider-border-width);\n    }\n\n    .left-side-item {\n      width: 100%;\n      padding: var(--sidebar-item-padding);\n      font: var(--sidebar-item-text-style);\n    }\n\n    .left-side-item.active {\n      background-color: var(--sidebar-item-active-bg);\n      font: var(--sidebar-item-text-style-active);\n    }\n\n    /*left sidebar*/\n\n    .right-side {\n      width: calc(100% - 168px);\n      display: flex;\n      flex-direction: column;\n    }\n\n    .header {\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      gap: 12px;\n      margin-bottom: 12px;\n      border-bottom-width: var(--divider-border-width);\n    }\n\n    .header-title {\n      font: var(--header-title-font);\n      word-break: break-word;\n      padding: 0 6px;\n    }\n\n    .logo {\n      min-width: var(--logo-size);\n      min-height: var(--logo-size);\n      max-width: var(--logo-size);\n      max-height: var(--logo-size);\n      color: var(--logo-color);\n    }\n\n    .main-content {\n      flex: 1;\n      overflow: auto;\n    }\n\n    .list:has(.list-item) {\n      margin-bottom: 32px;\n    }\n\n    .list-item {\n      display: flex;\n      align-items: flex-start;\n      gap: 6px;\n      padding: 3px 6px;\n    }\n\n    .list-item:hover {\n      background-color: var(--widget-row-highlight-bg);\n    }\n\n    .list-item + .list-item {\n      margin-top: 6px;\n    }\n\n    .list-item-text {\n      width: 50%;\n      max-width: 300px;\n      word-break: break-word;\n    }\n\n    .list-item-text-key {\n      font: var(--list-item-key-font);\n      text-transform: uppercase;\n    }\n\n    .list-item-text-value {\n      font: var(--list-item-value-font);\n    }\n\n    .list-item-status-value {\n      color: rgb(200, 200, 200);\n    }\n\n    .list-item-specific-value {\n      display: flex;\n      align-items: center;\n      gap: 8px;\n    }\n\n    .list-item-success-value {\n      color: rgb(153, 215, 201);\n    }\n\n    .list-item-warning-value {\n      color: rgb(255, 243, 113);\n    }\n\n    .list-item-error-value {\n      color: rgba(255, 90, 80);\n    }\n\n    .list-item-status-value:first-letter {\n      text-transform: uppercase;\n    }\n\n    .list-item-screenshot {\n      justify-content: center;\n    }\n\n    .list-item-screenshot-text {\n      display: none;\n    }\n\n    @media screen and (min-width: 700px) {\n      .list-item-text-value {\n        max-width: 100%;\n        width: 100%;\n      }\n\n      .list-item-screenshot-text {\n        display: block;\n      }\n    }\n\n    .tag {\n      display: flex;\n      flex-wrap: wrap;\n      gap: 8px;\n    }\n\n    .tag-item {\n      padding: 2px 12px;\n      background-color: rgb(106, 113, 128);\n      border-radius: 2px;\n    }\n\n    /*Table*/\n    .table-wrapper {\n      padding: 0 6px;\n    }\n\n    .table-wrapper + .table-wrapper {\n      margin-top: 8px;\n    }\n\n    .table-header {\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      gap: 12px;\n      margin-bottom: 12px;\n    }\n\n    .table-title {\n      font: var(--table-title-size);\n      text-transform: uppercase;\n    }\n\n    .table-row-count {\n      display: flex;\n      margin-right: auto;\n      align-items: center;\n      white-space: nowrap;\n      gap: 6px;\n      font: var(--table-title-size);\n    }\n\n    .table-search-input {\n      max-width: 200px;\n    }\n\n    @media screen and (max-width: 700px) {\n      .table-search-input {\n        max-width: 150px;\n      }\n    }\n\n    .table-container {\n      overflow: auto;\n    }\n\n    .table {\n      table-layout: fixed;\n    }\n\n    .table thead {\n      position: sticky;\n      top: 0;\n      z-index: 9;\n    }\n\n    .table th {\n      width: 250px;\n      background-color: var(--widget-row-highlight-bg);\n      color: var(--widget-text-color);\n      font: var(--table-th-size);\n      padding: 6px 12px;\n      text-transform: uppercase;\n      vertical-align: top;\n      text-align: left;\n    }\n\n    .table tr:nth-child(even) {\n      background-color: var(--table-color-even-row);\n    }\n\n    .table-resizable-line {\n      position: absolute;\n      inset: 3px 6px 3px auto;\n      width: 2px;\n      cursor: col-resize;\n      user-select: none;\n      background-color: rgb(98, 117, 163);\n      z-index: 9;\n    }\n\n    .table-resizable-line::before, .table-resizable-line::after {\n      content: '';\n      position: absolute;\n      inset: 0 auto;\n      width: 6px;\n    }\n\n    .table-resizable-line::before {\n      left: -6px;\n    }\n\n    .table-resizable-line::after {\n      right: -6px;\n    }\n\n    .table td {\n      padding: 8px 12px;\n      font: var(--table-td-size);\n      color: var(--widget-text-color);\n      vertical-align: top;\n    }\n\n    .table-button {\n      display: flex;\n      align-items: center;\n      gap: 6px;\n    }\n\n    .table-button-text {\n      text-decoration: underline;\n      line-height: 20px;\n    }\n\n    .table-button-icon {\n      width: 20px;\n      height: 20px;\n    }\n\n    .modal {\n      position: fixed;\n      top: 50%;\n      left: 50%;\n      transform: translate(-50%, -50%);\n      background-color: var(--widget-bg);\n      box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n      padding: 16px;\n      max-width: 90%;\n      min-width: 50%;\n      max-height: 90%;\n      border-radius: 8px;\n      z-index: 9999;\n      overflow: hidden;\n      display: flex;\n      flex-direction: column;\n    }\n\n    .modal-content {\n      overflow: auto;\n    }\n\n    .modal-content img {\n      display: flex;\n      max-width: 100%;\n      max-height: 100%;\n      margin: 0 auto;\n    }\n\n    .modal-content pre {\n      font: var(--table-td-size);\n    }\n\n    .modal-header {\n      margin-bottom: 8px;\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      gap: 6px;\n    }\n\n    .modal-title {\n      font: 600 20px/26px var(--widget-font-family);\n      word-wrap: break-word;\n      flex: 1;\n    }\n\n    .modal-close {\n      width: 24px;\n      height: 24px;\n      display: flex;\n      align-items: center;\n      justify-content: flex-end;\n    }\n\n    .modal-close svg {\n      width: 20px;\n      height: 20px;\n      stroke: #fff;\n    }\n\n    .modal-overlay {\n      position: fixed;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      background-color: rgba(0, 0, 0, 0.5);\n      z-index: 999;\n    }\n  </style>\n </head>\n <body>\n  <div class=\"wrapper\">\n   <div class=\"left-side divider-border-style\" id=\"leftSide\">\n   </div>\n   <div class=\"right-side\" id=\"rightSide\">\n    <div class=\"header divider-border-style\">\n     <h1 class=\"header-title\" id=\"headerTitle\">\n     </h1>\n     <svg class=\"logo\" fill=\"currentColor\" id=\"Layer_1\" style=\"enable-background:new 0 0 25 25;\" version=\"1.1\" viewbox=\"0 0 25 25\" x=\"0px\" xml:space=\"preserve\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" y=\"0px\">\n      <g>\n       <g>\n        <path d=\"M12.2,13.2C8.8,11.6,5.4,10,1.9,8.3v0.3c0,4.8,0,9.6,0,14.3c0,0.1,0,0.2,0,0.3h3.9c0,0,0-0.1,0.1-0.1\n\t\t\tc2.1-3.2,4.2-6.5,6.3-9.7C12.1,13.3,12.2,13.3,12.2,13.2z M22.9,18c0.2-0.1,0.2-0.2,0.2-0.4c0-5.2,0-10.4,0-15.6\n\t\t\tc0-0.1,0-0.1,0-0.2h-2.7c0.5,0.9,0.9,1.7,1.4,2.6c-0.2,0.1-0.3,0.1-0.4,0.2c-0.4,0.1-0.7,0.1-0.9-0.3c-0.1-0.1-0.2-0.3-0.3-0.4\n\t\t\tc-0.9-1.4-2.2-2-3.8-1.8c-1,0.1-1.9,0.3-2.9,0.6C11,3.3,8.6,4.1,6.1,4.8C5.5,5,4.8,5.2,4.1,5.4c3.9,1.8,7.8,3.6,11.8,5.4\n\t\t\tc-2.6,4-5.1,8-7.7,12c0.1,0,0.2,0,0.3-0.1c4.1-1.2,8.1-2.5,12.2-3.8C21.4,18.7,22.2,18.5,22.9,18z M4.9,3.6C6.4,3.1,8,2.6,9.6,2\n\t\t\tc0.1,0,0.2,0,0.2-0.2H1.9v2.7c0.1,0,0.2-0.1,0.3-0.1C3.1,4.1,4,3.8,4.9,3.6z M17,23.1h6.1v-1.8C21,21.9,19,22.5,17,23.1\n\t\t\tC17,23.1,17,23.1,17,23.1z\">\n        </path>\n       </g>\n      </g>\n     </svg>\n    </div>\n    <section class=\"main-content\" id=\"mainContent\">\n    </section>\n   </div>\n  </div>\n  <script>\n   // JSON placeholder [{stepInstanceName}.JsonResult]\n  const actionListData = [{stepInstanceName}.JsonResult];\n\n  // Constant for fields that are allowed to be modified\n  const allowlistedFields = [];\n\n  // Constants for tooltip positioning\n  const tooltipGap = 25;\n  const tooltipTriangleHeight = 8;\n  const tooltipTriangleMinGap = 5;\n  const triangleWidth = 16;\n  let tooltipTimeout = undefined;\n\n  // Get all elements \"table\"\n  const tables = document.getElementsByClassName(\"table\");\n\n  const tooltipDetectResizeObserver = new ResizeObserver((entries) => {\n    for (const entry of entries) {\n      const target = entry.target;\n      if (target) {\n        const {offsetWidth, scrollWidth} = target;\n        if (scrollWidth > offsetWidth) {\n          target.addEventListener(\"mouseover\", createTooltipListener);\n          target.addEventListener(\"mouseout\", removeTooltipListener);\n        } else {\n          target.removeEventListener(\"mouseover\", createTooltipListener);\n          target.removeEventListener(\"mouseout\", removeTooltipListener);\n        }\n      }\n    }\n  });\n\n  // Filter actionListData based on allowlistedFields\n  const filteredActionListData = actionListData\n    .filter(el => el.Entity.trim() !== \"\" && Object.keys(el.EntityResult).length > 0)\n    .map(el => {\n      const filteredEntityResult = filterKeys(el.EntityResult, allowlistedFields);\n      return {...el, EntityResult: filteredEntityResult};\n    })\n    .filter(el => Object.keys(el.EntityResult).length > 0);\n\n  // Update the UI with filtered data\n  if (filteredActionListData.length > 0) {\n    renderKeysInUI(flattenKeys(filteredActionListData[0].EntityResult));\n\n    headerTitle.textContent = decodeURIComponent(filteredActionListData[0].Entity);\n\n    filteredActionListData.forEach((el, index) => {\n      const displayValue = el.Entity;\n      const cleanDisplayValue = removeSpecialSymbols(displayValue);\n      const button = document.createElement(\"button\");\n      button.id = cleanDisplayValue;\n      button.classList.add(\"left-side-item\");\n      button.setAttribute(\"data-menu\", \"item\");\n      if (index === 0) {\n        button.classList.add(\"active\");\n      }\n      renderWithTooltip(button, displayValue);\n      leftSide.append(button);\n    });\n\n\n    if (filteredActionListData.length === 1) {\n      leftSide.remove();\n      rightSide.style.width = \"100%\";\n    } else {\n      leftSide.addEventListener(\"click\", event => {\n        const target = event.target.closest(\"[data-menu='item']\");\n        if (!target) return;\n\n        const id = target.id;\n        const object = filteredActionListData.find(el => removeSpecialSymbols(el.Entity) === id);\n\n        if (object) {\n          mainContent.innerHTML = \"\";\n          renderKeysInUI(flattenKeys(object.EntityResult));\n          headerTitle.textContent = decodeURIComponent(object.Entity);\n          renderModal();\n          for (let i = 0; i < tables.length; i++) {\n            resizableGrid(tables[i]);\n          }\n        }\n        document.querySelectorAll(\"[data-menu='item']\").forEach(item => item.classList.remove(\"active\"));\n        target.classList.add(\"active\");\n\n        mainContent.scrollTop = 0;\n      });\n    }\n\n    renderModal();\n  }\n\n  /**\n   * Recursively flattens a nested object into an array of { key, value } pairs.\n   */\n  function flattenKeys(obj, parentKey = \"\", sep = \" \") {\n    let keys = [];\n    for (let key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        let combinedKey = parentKey ? `${parentKey}${sep}${key}` : key;\n\n        if (Array.isArray(obj[key])) {\n          keys.push({key: combinedKey, value: obj[key]});\n        } else if (typeof obj[key] === \"object\" && obj[key] !== null) {\n          let nestedKeys = flattenKeys(obj[key], combinedKey, sep);\n          keys = [...keys, ...nestedKeys];\n        } else {\n          keys.push({key: combinedKey, value: obj[key]});\n        }\n      }\n    }\n\n    return keys;\n  }\n\n  /**\n   * Returns transposed Array\n   */\n  function transposeArray(array) {\n    const n = array.length;\n    if (n === 0) {\n      return [];\n    }\n    const m = array[0]?.length ?? 0;\n    if (m === 0) {\n      return [];\n    }\n\n    let transposedArray = new Array(m);\n    for (let i = 0; i < m; i++) {\n      transposedArray[i] = new Array(n);\n    }\n\n    for (let i = 0; i < n; i++) {\n      for (let j = 0; j < m; j++) {\n        transposedArray[j][i] = array[i][j];\n      }\n    }\n\n    return transposedArray;\n  }\n\n  /**\n   * Renders keys and their corresponding values in the UI.\n   */\n  function renderKeysInUI(keys) {\n    const mainContent = document.getElementById(\"mainContent\");\n    const ul = document.createElement(\"ul\");\n    ul.classList.add(\"list\");\n\n    keys.forEach(({key, value}) => {\n      if (!value && value !== false && typeof value !== \"number\") return;\n      const li = document.createElement(\"li\");\n      li.classList.add(\"list-item\");\n\n      const spanElement = document.createElement(\"span\");\n      const spanKey = document.createElement(\"span\");\n      spanKey.classList.add(\"list-item-text\", \"list-item-text-key\");\n      renderWithTooltip(spanKey, convertCamelCaseToTitleCase(key));\n\n      if (Array.isArray(value)) {\n        spanElement.classList.add(\"list-item-text\", \"list-item-text-value\", \"tag\");\n        value.forEach(item => {\n          if (typeof item === \"object\") return;\n          const label = document.createElement(\"label\");\n          label.classList.add(\"tag-item\");\n          renderWithTooltip(label, item);\n          spanElement.appendChild(label);\n        });\n\n        li.appendChild(spanKey);\n        li.appendChild(spanElement);\n\n      } else {\n        spanElement.classList.add(\"list-item-text\", \"list-item-text-value\");\n        renderWithTooltip(spanElement, value);\n        const lowerCaseValue = String(value).toLowerCase();\n        if (value === false || lowerCaseValue === \"false\") {\n          const icon = `<svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M12.7511 12.7518C15.3754 10.1275 15.3754 5.8726 12.7511 3.24827C10.1267 0.623948 5.87186 0.623948 3.24754 3.24827C0.623216 5.8726 0.623216 10.1275 3.24754 12.7518C5.87186 15.3761 10.1267 15.3761 12.7511 12.7518ZM6.23436 10.9416C5.90943 11.2665 5.38266 11.2665 5.05773 10.9416C4.73281 10.6167 4.73281 10.0899 5.05773 9.76497L6.82267 8.00003L5.05773 6.23509C4.73281 5.91017 4.73281 5.38339 5.05773 5.05847C5.38266 4.73354 5.90943 4.73354 6.23436 5.05847L7.9993 6.8234L9.76424 5.05847C10.0892 4.73354 10.6159 4.73354 10.9409 5.05847C11.2658 5.38339 11.2658 5.91017 10.9409 6.23509L9.17592 8.00003L10.9409 9.76497C11.2658 10.0899 11.2658 10.6167 10.9409 10.9416C10.6159 11.2665 10.0892 11.2665 9.76424 10.9416L7.9993 9.17666L6.23436 10.9416Z\" fill=\"#b5b5b5\"/></svg>`;\n          spanElement.classList.add(\"list-item-status-value\", \"list-item-specific-value\");\n          spanElement.innerHTML = `${icon} False`;\n        } else if (value === true || lowerCaseValue === \"true\") {\n          const icon = `<svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M8.00065 1.33325C4.32065 1.33325 1.33398 4.31992 1.33398 7.99992C1.33398 11.6799 4.32065 14.6666 8.00065 14.6666C11.6807 14.6666 14.6673 11.6799 14.6673 7.99992C14.6673 4.31992 11.6807 1.33325 8.00065 1.33325ZM6.66732 11.3333L3.33398 7.99992L4.27398 7.05992L6.66732 9.44659L11.7273 4.38659L12.6673 5.33325L6.66732 11.3333Z\" fill=\"#b5b5b5\"/></svg>`;\n          spanElement.classList.add(\"list-item-status-value\", \"list-item-specific-value\");\n          spanElement.innerHTML = `${icon} True`;\n        } else if (lowerCaseValue === \"success\") {\n          const icon = `<svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M8.00065 1.33325C4.32065 1.33325 1.33398 4.31992 1.33398 7.99992C1.33398 11.6799 4.32065 14.6666 8.00065 14.6666C11.6807 14.6666 14.6673 11.6799 14.6673 7.99992C14.6673 4.31992 11.6807 1.33325 8.00065 1.33325ZM6.66732 11.3333L3.33398 7.99992L4.27398 7.05992L6.66732 9.44659L11.7273 4.38659L12.6673 5.33325L6.66732 11.3333Z\" fill=\"#99D7CA\"/></svg>`;\n          spanElement.classList.add(\"list-item-success-value\", \"list-item-specific-value\");\n          spanElement.innerHTML = `${icon} Success`;\n        } else if (lowerCaseValue === \"warning\") {\n          const icon = `<svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M8.00065 1.33325C4.32065 1.33325 1.33398 4.31992 1.33398 7.99992C1.33398 11.6799 4.32065 14.6666 8.00065 14.6666C11.6807 14.6666 14.6673 11.6799 14.6673 7.99992C14.6673 4.31992 11.6807 1.33325 8.00065 1.33325ZM8.66732 11.3333H7.33398V7.33325H8.66732V11.3333ZM8.66732 5.99992H7.33398V4.66659H8.66732V5.99992Z\" fill=\"#FFF371\"/></svg>`;\n          spanElement.classList.add(\"list-item-warning-value\", \"list-item-specific-value\");\n          spanElement.innerHTML = `${icon} Warning`;\n        } else if (lowerCaseValue === \"error\") {\n          const icon = `<svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M8.00065 1.33325C4.32065 1.33325 1.33398 4.31992 1.33398 7.99992C1.33398 11.6799 4.32065 14.6666 8.00065 14.6666C11.6807 14.6666 14.6673 11.6799 14.6673 7.99992C14.6673 4.31992 11.6807 1.33325 8.00065 1.33325ZM8.66732 11.3333H7.33398V9.99992H8.66732V11.3333ZM8.66732 8.66659H7.33398V4.66659H8.66732V8.66659Z\" fill=\"#FF5A50\"/></svg>`;\n          spanElement.classList.add(\"list-item-error-value\", \"list-item-specific-value\");\n          spanElement.innerHTML = `${icon} Error`;\n        } else if (lowerCaseValue === \"informational\") {\n          const icon = `<svg width=\"27\" height=\"6\" viewBox=\"0 0 27 6\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><circle cx=\"3\" cy=\"3\" r=\"3\" fill=\"#B2B6BD\"/><circle cx=\"10\" cy=\"3\" r=\"3\" fill=\"#B2B6BD\"/><circle cx=\"17\" cy=\"3\" r=\"3\" fill=\"#B2B6BD\"/><circle cx=\"24\" cy=\"3\" r=\"3\" fill=\"#B2B6BD\"/></svg>`;\n          spanElement.classList.add(\"list-item-specific-value\");\n          spanElement.innerHTML = `${icon} Informational`;\n        } else if (lowerCaseValue === \"low\") {\n          const icon = `<svg width=\"27\" height=\"6\" viewBox=\"0 0 27 6\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><circle cx=\"3\" cy=\"3\" r=\"3\" fill=\"#78D9EC\"/><circle cx=\"10\" cy=\"3\" r=\"3\" fill=\"#B2B6BD\"/><circle cx=\"17\" cy=\"3\" r=\"3\" fill=\"#B2B6BD\"/><circle cx=\"24\" cy=\"3\" r=\"3\" fill=\"#B2B6BD\"/></svg>`;\n          spanElement.classList.add(\"list-item-specific-value\");\n          spanElement.innerHTML = `${icon} Low`;\n        } else if (lowerCaseValue === \"medium\") {\n          const icon = `<svg width=\"27\" height=\"6\" viewBox=\"0 0 27 6\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><circle cx=\"3\" cy=\"3\" r=\"3\" fill=\"#FFF371\"/><circle cx=\"10\" cy=\"3\" r=\"3\" fill=\"#FFF371\"/><circle cx=\"17\" cy=\"3\" r=\"3\" fill=\"#B2B6BD\"/><circle cx=\"24\" cy=\"3\" r=\"3\" fill=\"#B2B6BD\"/></svg>`;\n          spanElement.classList.add(\"list-item-specific-value\");\n          spanElement.innerHTML = `${icon} Medium`;\n        } else if (lowerCaseValue === \"high\") {\n          const icon = `<svg width=\"27\" height=\"6\" viewBox=\"0 0 27 6\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><circle cx=\"3\" cy=\"3\" r=\"3\" fill=\"#FA903E\"/><circle cx=\"10\" cy=\"3\" r=\"3\" fill=\"#FA903E\"/><circle cx=\"17\" cy=\"3\" r=\"3\" fill=\"#FA903E\"/><circle cx=\"24\" cy=\"3\" r=\"3\" fill=\"#B2B6BD\"/></svg>`;\n          spanElement.classList.add(\"list-item-specific-value\");\n          spanElement.innerHTML = `${icon} High`;\n        } else if (lowerCaseValue === \"critical\") {\n          const icon = `<svg width=\"27\" height=\"6\" viewBox=\"0 0 27 6\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><circle cx=\"3\" cy=\"3\" r=\"3\" fill=\"#EC453B\"/><circle cx=\"10\" cy=\"3\" r=\"3\" fill=\"#EC453B\"/><circle cx=\"17\" cy=\"3\" r=\"3\" fill=\"#EC453B\"/><circle cx=\"24\" cy=\"3\" r=\"3\" fill=\"#EC453B\"/></svg>`;\n          spanElement.classList.add(\"list-item-specific-value\");\n          spanElement.innerHTML = `${icon} Critical`;\n        } else if (/\\.(png|jpg|jpeg|gif|bmp|webp)$/.test(lowerCaseValue)) {\n          const icon = `<svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><rect x=\"1\" y=\"1\" width=\"14\" height=\"14\" fill=\"white\" stroke=\"#35424F\" stroke-width=\"2\" stroke-linejoin=\"round\"/><path d=\"M12.6284 11.4587L10.0829 5.94357C10.0201 5.80781 9.89075 5.71533 9.74227 5.69963C9.59209 5.68393 9.44827 5.74714 9.35833 5.86678L7.06745 8.92129L5.70989 7.90312C5.60892 7.82761 5.47995 7.80046 5.35777 7.8293C5.23517 7.85815 5.13208 7.94003 5.07565 8.05245L3.3787 11.4464C3.31295 11.5779 3.32016 11.734 3.39737 11.8591C3.47458 11.9843 3.61119 12.0607 3.7584 12.0607H12.2432C12.3878 12.0607 12.5227 11.9868 12.6004 11.8651C12.6784 11.7433 12.689 11.5902 12.6284 11.4587Z\" fill=\"#35424F\"/><path d=\"M6.30396 6.1216C7.00686 6.1216 7.57668 5.55179 7.57668 4.84889C7.57668 4.14599 7.00686 3.57617 6.30396 3.57617C5.60106 3.57617 5.03125 4.14599 5.03125 4.84889C5.03125 5.55179 5.60106 6.1216 6.30396 6.1216Z\" fill=\"#35424F\"/></svg>`;\n          spanElement.classList.add(\"list-item-specific-value\");\n          spanElement.innerHTML = `<button class=\"list-item-screenshot tag tag-item\" data-modal=\"${value}\" data-modal-button=\"item\" data-modal-img=\"true\">${icon} <span class=\"list-item-screenshot-text text-ellipsis\">Screenshot</span></button>`;\n        }\n        li.appendChild(spanElement);\n      }\n\n      if (!spanElement.textContent) {\n        return;\n      }\n\n      li.insertBefore(spanKey, li.firstChild);\n      ul.appendChild(li);\n    });\n\n    mainContent.appendChild(ul);\n\n    keys.forEach(({key, value}) => {\n      if (Array.isArray(value)) {\n        if (typeof value[0] !== \"object\") {\n          return;\n        }\n        const tableWrapper = document.createElement(\"div\");\n        tableWrapper.classList.add(\"table-wrapper\");\n        const tableHeader = document.createElement(\"div\");\n        tableHeader.classList.add(\"table-header\");\n        const tableSearchInput = document.createElement(\"input\");\n        tableSearchInput.classList.add(\"input\", \"table-search-input\");\n        tableSearchInput.setAttribute(\"placeholder\", \"Search (regex)\");\n        const tableTitle = document.createElement(\"h2\");\n        tableTitle.classList.add(\"table-title\");\n        renderWithTooltip(tableTitle, `${convertCamelCaseToTitleCase(key)} Table`);\n        const rowCountContainer = document.createElement(\"div\");\n        rowCountContainer.classList.add(\"table-row-count\");\n\n        function updateRowCount() {\n          const visibleRows = Array.from(tbody.querySelectorAll(\"tr\")).filter(row => row.style.display !== \"none\");\n          const rowCount = visibleRows.length;\n          const rowCountMessage = rowCount === 1 ? \"Record found\" : \"Records found\";\n          rowCountContainer.innerHTML = `/ <span>${rowCount}</span> <span>${rowCountMessage}</span>`;\n        }\n\n        const tableContainer = document.createElement(\"div\");\n        const table = document.createElement(\"table\");\n        tableContainer.classList.add(\"table-container\");\n        table.classList.add(\"table\");\n        tableContainer.append(table);\n        const thead = document.createElement(\"thead\");\n        const tbody = document.createElement(\"tbody\");\n\n        const tableDataMap = new Map();\n        value.forEach((valuesObject, index) => {\n          if (typeof valuesObject === \"object\") {\n            for (const [key, value] of Object.entries(valuesObject)) {\n              const currentValues = tableDataMap.get(key);\n              if (currentValues) {\n                if (currentValues.length < index) {\n                  tableDataMap.set(key, currentValues.concat(new Array(index - currentValues.length).fill(\"\"), [value]));\n                } else {\n                  tableDataMap.set(key, [...currentValues, value]);\n                }\n              } else {\n                tableDataMap.set(key, [...new Array(index).fill(\"N/A\"), value]);\n              }\n            }\n          }\n        });\n\n        const headerRow = document.createElement(\"tr\");\n        Array.from(tableDataMap.keys()).forEach((subKey) => {\n          const th = document.createElement(\"th\");\n          th.textContent = convertCamelCaseToTitleCase(subKey);\n          headerRow.appendChild(th);\n          renderWithTooltip(th, convertCamelCaseToTitleCase(subKey));\n        });\n        thead.appendChild(headerRow);\n\n        const rowsCount = value.length;\n        const tableValues = Array.from(tableDataMap.values());\n        const valuesToRender = tableValues.map((values) => {\n          const actualValuesCount = values.length;\n          return actualValuesCount < rowsCount ? values.concat(new Array(rowsCount - actualValuesCount).fill(\"\")) : values;\n        });\n\n        transposeArray(valuesToRender).forEach((values) => {\n          const bodyRow = document.createElement(\"tr\");\n\n          values.forEach(subValue => {\n            const td = document.createElement(\"td\");\n            if (typeof subValue === \"object\") {\n              const button = document.createElement(\"button\");\n              button.innerHTML = `<span class=\"table-button-icon\"><svg width=\"100%\" height=\"100%\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                                    <path d=\"M5.2 4.09951C5.01435 4.09951 4.8363 4.17326 4.70503 4.30454C4.57375 4.43581 4.5 4.61386 4.5 4.79951V18.7995C4.5 19.1861 4.8134 19.4995 5.2 19.4995H8.7C9.0866 19.4995 9.4 19.1861 9.4 18.7995C9.4 18.4129 9.0866 18.0995 8.7 18.0995H5.9V5.49951H8.7C9.0866 5.49951 9.4 5.18611 9.4 4.79951C9.4 4.41291 9.0866 4.09951 8.7 4.09951H5.2Z\" fill=\"white\"/>\n                                                    <path d=\"M19.2 4.09951H15.7C15.3134 4.09951 15 4.41291 15 4.79951C15 5.18611 15.3134 5.49951 15.7 5.49951H18.5V18.0995H15.7C15.3134 18.0995 15 18.4129 15 18.7995C15 19.1861 15.3134 19.4995 15.7 19.4995H19.2C19.5866 19.4995 19.9 19.1861 19.9 18.7995V4.79951C19.9 4.41291 19.5866 4.09951 19.2 4.09951Z\" fill=\"white\"/>\n                                                    </svg></span>\n                                                    <span class=\"table-button-text\">Data Object</span>`;\n              button.classList.add(\"table-button\");\n              button.setAttribute(\"data-modal\", formatData(subValue));\n              button.setAttribute(\"data-modal-button\", \"item\");\n              if (Array.isArray(subValue) && subValue.length === 0 || subValue === null) {\n                td.innerHTML = \"N/A\";\n              } else {\n                td.appendChild(button);\n                button.setAttribute(\"data-modal-title\", convertCamelCaseToTitleCase(key));\n              }\n            } else {\n              if (subValue !== \"\") {\n                renderWithTooltip(td, subValue);\n              } else {\n                td.textContent = \"N/A\";\n              }\n            }\n            bodyRow.appendChild(td);\n          });\n          thead.appendChild(headerRow);\n          tbody.appendChild(bodyRow);\n        });\n\n        // Add search functionality\n        tableSearchInput.addEventListener(\"input\", () => {\n          const searchValue = tableSearchInput.value;\n          let regex;\n\n          try {\n            regex = new RegExp(searchValue, 'i');\n          } catch (e) {\n            regex = null;\n          }\n\n          const rows = tbody.querySelectorAll(\"tr\");\n\n          rows.forEach(row => {\n            const cells = row.querySelectorAll(\"td\");\n            const match = Array.from(cells).some(cell => {\n              const textContent = cell.textContent.toLowerCase();\n              return regex ? regex.test(textContent) : textContent.includes(searchValue.toLowerCase());\n            });\n            row.style.display = match ? \"\" : \"none\";\n          });\n\n          updateRowCount();\n        });\n\n        updateRowCount();\n\n        table.appendChild(thead);\n        table.appendChild(tbody);\n        tableHeader.appendChild(tableTitle);\n        tableHeader.appendChild(rowCountContainer);\n        tableHeader.appendChild(tableSearchInput);\n        tableWrapper.appendChild(tableHeader);\n        tableWrapper.appendChild(tableContainer);\n        mainContent.appendChild(tableWrapper);\n      }\n    });\n  }\n\n  /**\n   * Utility function to filter keys based on allowlistedFields\n   */\n  function filterKeys(obj, allowedKeys) {\n    if (allowedKeys.length === 0) {\n      return obj;\n    }\n    const filtered = {};\n    allowedKeys.forEach(key => {\n      if (obj.hasOwnProperty(key)) {\n        filtered[key] = obj[key];\n      }\n    });\n    return filtered;\n  }\n\n  /**\n   * Formats data object into a human-readable string representation.\n   */\n  function formatData(data) {\n    const isObject = obj => obj && obj.constructor === ({}).constructor;\n    const formatIfObject = item => isObject(item) ? JSON.stringify(item, null, 4) : item;\n    if (Array.isArray(data)) {\n      return data.map(\n        item => Array.isArray(item) ? formatData(item) : formatIfObject(item),\n      ).join(\",\\n\");\n    }\n    return formatIfObject(data);\n  }\n\n  /**\n   * Removes special symbols from a string.\n   */\n  function removeSpecialSymbols(str) {\n    return str.replace(/[^\\w\\s]/gi, \"\");\n  }\n\n  /**\n   * Converts camelCaseName to Title Case.\n   */\n  function convertCamelCaseToTitleCase(str) {\n    let result = str.replace(/_/g, \" \");\n    result = result.replace(/([a-z])([A-Z])/g, \"$1 $2\");\n    result = result.replace(/\\b\\w/g, char => char.toUpperCase());\n    return result;\n  }\n\n  /**\n   * Creates a modal dialog with given content.\n   */\n  function createModal(content, title, isImage) {\n    const modal = document.createElement(\"div\");\n    modal.classList.add(\"modal\");\n    const modalOverlay = document.createElement(\"div\");\n    modalOverlay.classList.add(\"modal-overlay\");\n    document.body.append(modalOverlay);\n    const modalHeader = document.createElement(\"div\");\n    modalHeader.classList.add(\"modal-header\");\n    const modalTitle = document.createElement(\"h2\");\n    modalTitle.classList.add(\"modal-title\");\n    modalTitle.textContent = title;\n    const closeButton = document.createElement(\"button\");\n    closeButton.innerHTML = `\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n            <path d=\"M18 6L6 18M6 6l12 12\" />\n        </svg>`;\n    closeButton.classList.add(\"modal-close\");\n    modalHeader.append(modalTitle);\n    modalHeader.append(closeButton);\n    modal.append(modalHeader);\n    const modalContent = document.createElement(\"div\");\n    modalContent.classList.add(\"modal-content\");\n    modal.append(modalContent);\n\n    if (isImage) {\n      const imgElement = document.createElement(\"img\");\n      imgElement.src = content;\n\n      checkImageUrl(content, function (isValid) {\n        if (isValid) {\n          imgElement.src = content;\n        } else {\n          modalContent.innerText = \"Image URL is broken\";\n        }\n      });\n      modalContent.append(imgElement);\n    } else {\n      const preElement = document.createElement(\"pre\");\n      preElement.textContent = content;\n      modalContent.append(preElement);\n    }\n    document.body.append(modal);\n    closeButton.addEventListener(\"click\", () => {\n      modal.remove();\n      modalOverlay.remove();\n    });\n  }\n\n\n  /**\n   * Attaches modal creation behavior to elements with data-modal-button attribute.\n   */\n  function renderModal() {\n    document.querySelectorAll(\"[data-modal-button=\\\"item\\\"]\").forEach((button) => {\n      button.addEventListener(\"click\", () => {\n        const content = button.getAttribute(\"data-modal\");\n        const title = button.getAttribute(\"data-modal-title\");\n        const isImage = button.getAttribute(\"data-modal-img\") === \"true\";\n        createModal(content, title, isImage);\n      });\n    });\n  }\n\n  /**\n   * Creates a tooltip with given text and position.\n   */\n  function createTooltip(text, x, y, trianglePointX, placeAtBottom, contentOverflowWindow) {\n    removeTooltip();\n    const tooltip = document.createElement(\"div\");\n    tooltip.classList.add(\"tooltip\");\n    tooltip.textContent = text;\n    tooltip.style.left = `${x}px`;\n    tooltip.style.top = `${y}px`;\n    if (contentOverflowWindow) {\n      tooltip.style.right = `${tooltipGap}px`;\n    }\n    const tooltipTriangle = document.createElement(\"span\");\n    tooltipTriangle.classList.add(\"tooltip-triangle\");\n    tooltipTriangle.style.left = `${trianglePointX}px`;\n    if (placeAtBottom) {\n      tooltipTriangle.style.top = \"-8px\";\n      tooltipTriangle.style.borderTop = \"0\";\n      tooltipTriangle.style.borderBottom = \"solid 8px rgb(195, 210, 232)\";\n    }\n    tooltip.append(tooltipTriangle);\n    document.body.append(tooltip);\n  }\n\n  /**\n   * Removes any existing tooltip from the DOM.\n   */\n  function removeTooltip() {\n    const tooltip = document.querySelectorAll(\".tooltip\");\n    tooltip.forEach((item) => {\n      if (item) {\n        item.remove();\n      }\n    });\n  }\n\n  /**\n   * Sets a timeout to calculate and show tooltip position after a delay.\n   */\n  function createTooltipListener(event) {\n    tooltipTimeout = setTimeout(() => calculateTooltipPosition(event), 1000);\n  }\n\n  /**\n   * Clears any existing tooltip timeout and removes the tooltip.\n   */\n  function removeTooltipListener() {\n    if (tooltipTimeout) {\n      clearTimeout(tooltipTimeout);\n    }\n    removeTooltip();\n  }\n\n  /**\n   * Calculates and positions the tooltip relative to the event target.\n   */\n  function calculateTooltipPosition(event) {\n    const target = event.target;\n    if (!target) {\n      return;\n    }\n    const viewportWidth = window.innerWidth;\n    const rect = target.getBoundingClientRect();\n    const tooltipContent = document.createElement(\"div\");\n    tooltipContent.classList.add(\"tooltip\");\n    tooltipContent.style.top = \"0\";\n    tooltipContent.textContent = target.textContent;\n    document.body.appendChild(tooltipContent);\n    let contentOverflowWindow = false;\n    // Determine if window width would not be enough for content of tooltip\n    if (tooltipGap * 2 + tooltipContent.offsetWidth >= viewportWidth) {\n      // setting left, right positions to get correct tooltipContentWidth and tooltipContentHeight\n      tooltipContent.style.left = `${tooltipGap}px`;\n      tooltipContent.style.right = `${tooltipGap}px`;\n      contentOverflowWindow = true;\n    }\n    const tooltipContentWidth = tooltipContent.offsetWidth;\n    const tooltipContentHeight = tooltipContent.offsetHeight;\n    tooltipContent.remove();\n    const elementMidX = rect.left + (rect.width / 2);\n    const placeOnRight = elementMidX + tooltipContentWidth / 2 + tooltipGap > viewportWidth;\n    const x = Math.max(tooltipGap, placeOnRight ? viewportWidth - tooltipContentWidth - tooltipGap : elementMidX - tooltipContentWidth / 2);\n    const placeAtBottom = rect.top < tooltipContentHeight;\n    const y = placeAtBottom ? rect.bottom + tooltipTriangleHeight : rect.top - tooltipContentHeight;\n    // Calculating trianglePointX relative to window width, to guarantee that it is not out of window\n    const trianglePointX = Math.min(Math.max(elementMidX - x, tooltipTriangleMinGap), tooltipContentWidth - tooltipTriangleMinGap - triangleWidth);\n    createTooltip(target.textContent, x, y, trianglePointX, placeAtBottom, contentOverflowWindow);\n  }\n\n  /**\n   * Renders an item with text and sets up tooltip behavior.\n   */\n  function renderWithTooltip(item, text) {\n    item.innerText = decodeURIComponent(text);\n    item.classList.add(\"text-ellipsis\");\n    tooltipDetectResizeObserver.observe(item);\n  }\n\n  function checkImageUrl(url, callback) {\n    const img = new Image();\n    img.onload = function () {\n      callback(true);\n    };\n    img.onerror = function () {\n      callback(false);\n    };\n    img.src = url;\n  }\n\n  /**\n   * Function to make a table resizable\n   */\n  function resizableGrid(table) {\n    const row = table.getElementsByTagName(\"tr\")[0],\n      cols = row ? row.children : undefined;\n    if (!cols) return;\n\n    for (let i = 0; i < cols.length; i++) {\n      const div = createDiv();\n      cols[i].appendChild(div);\n      cols[i].style.position = \"relative\";\n      setListeners(div);\n    }\n\n    function setListeners(div) {\n      let pageX, curCol, nxtCol, curColWidth, nxtColWidth, tableWidth;\n\n      div.addEventListener(\"mousedown\", function (e) {\n        curCol = e.target.parentElement;\n        nxtCol = curCol.nextElementSibling;\n        pageX = e.pageX;\n\n        const padding = paddingDiff(curCol);\n\n        curColWidth = curCol.offsetWidth - padding;\n        if (nxtCol) {\n          nxtColWidth = nxtCol.offsetWidth - padding;\n        }\n      });\n\n      document.addEventListener(\"mousemove\", function (e) {\n        if (curCol) {\n          const diffX = e.pageX - pageX;\n          if (nxtCol) {\n            nxtCol.style.width = nxtColWidth - diffX + \"px\";\n          }\n          curCol.style.width = curColWidth + diffX + \"px\";\n          table.style.width = tableWidth + diffX + \"px\";\n          removeTooltipListener();\n        }\n      });\n\n      document.addEventListener(\"mouseup\", function () {\n        curCol = undefined;\n        nxtCol = undefined;\n        pageX = undefined;\n        nxtColWidth = undefined;\n        curColWidth = undefined;\n        tableWidth = undefined;\n      });\n    }\n\n    function createDiv() {\n      const div = document.createElement(\"div\");\n      div.classList.add(\"table-resizable-line\");\n      return div;\n    }\n\n    function paddingDiff(col) {\n      if (getStyleVal(col, \"box-sizing\") === \"border-box\") {\n        return 0;\n      }\n\n      const padLeft = getStyleVal(col, \"padding-left\");\n      const padRight = getStyleVal(col, \"padding-right\");\n      return parseInt(padLeft) + parseInt(padRight);\n    }\n\n    function getStyleVal(elm, css) {\n      return window.getComputedStyle(elm, null).getPropertyValue(css);\n    }\n  }\n\n  for (let i = 0; i < tables.length; i++) {\n    resizableGrid(tables[i]);\n  }\n\n  /**\n   * Counts the number of rows in each table's body.\n   */\n  function countTableBodyRows() {\n    const tables = document.getElementsByClassName(\"table\");\n\n    const rowCounts = [];\n\n    for (let i = 0; i < tables.length; i++) {\n      const table = tables[i];\n      const tbody = table.querySelector(\"tbody\");\n\n      if (tbody) {\n        const rows = tbody.getElementsByTagName(\"tr\");\n        rowCounts.push(rows.length);\n      } else {\n        rowCounts.push(0);\n      }\n    }\n\n    return rowCounts;\n  }\n\n  countTableBodyRows();\n  </script>\n </body>\n</html>\n",
                        "htmlHeight": 400,
                        "safeRendering": false,
                        "type": 3,
                        "widgetDefinitionScope": 2
                    }
                },
                {
                    "metadata": {
                        "id": 19,
                        "identifier": "2a5ed201-0b67-4f90-a789-ad6d5dd76f25",
                        "title": "VirusTotalV3_Add Vote To Entity_1",
                        "width": 1,
                        "order": 2,
                        "description": "This widget highlights the most important items in Add Vote To Entity",
                        "type": 3,
                        "templateIdentifier": "283fde24-45ef-453d-be38-2202d11532f7",
                        "predefinedWidgetTemplateIdentifier": "d8a89245-6847-4ef3-b4db-1921fe0cfe41",
                        "actionIdentifier": null,
                        "stepIdentifier": "fe5a99e9-c6ec-4010-8e85-3e9442ca7190",
                        "stepIntegration": null,
                        "blockStepIdentifier": null,
                        "blockStepInstanceName": null,
                        "presentIfEmpty": false,
                        "conditionsGroup": {
                            "conditions": [
                                {
                                    "fieldName": "[{stepInstanceName}.JsonResult]",
                                    "matchType": 2,
                                    "value": "["
                                },
                                {
                                    "fieldName": "[{stepInstanceName}.JsonResult]",
                                    "matchType": 1,
                                    "value": "{"
                                },
                                {
                                    "fieldName": "[{stepInstanceName}.JsonResult]",
                                    "matchType": 1,
                                    "value": "Entity"
                                },
                                {
                                    "fieldName": "[{stepInstanceName}.JsonResult]",
                                    "matchType": 1,
                                    "value": "EntityResult"
                                }
                            ],
                            "logicalOperator": 0
                        },
                        "integrationName": "VirusTotalV3",
                        "isSupported": null
                    },
                    "config": {
                        "htmlContent": "<!-- Widget created by Enrichment Template / Version 1.0 / 11.07.2024 -->\n<!DOCTYPE html>\n<html lang=\"en\">\n <head>\n  <meta charset=\"utf-8\"/>\n  <meta content=\"width=device-width, initial-scale=1.0\" name=\"viewport\"/>\n  <link href=\"https://fonts.googleapis.com/css?family=Open+Sans:400,400i,700,700i\" rel=\"stylesheet\"/>\n  <link href=\"https://fonts.googleapis.com/css?family=Source Sans Pro\" rel=\"stylesheet\"/>\n  <title>\n   VirusTotalV3 - Add Vote To Entity\n  </title>\n  <style>\n   /* Root Variables */\n    :root {\n      --widget-bg: rgb(33, 44, 68);\n      --widget-font-family: 'Source Sans Pro', sans-serif;\n      --widget-text-color: rgb(255, 255, 255);\n      --widget-scrollbar-size: 12px;\n      --widget-row-highlight-bg: rgb(47 61 91);\n\n      /*Logo styles*/\n      --logo-size: 48px;\n      --logo-color: rgb(255, 255, 255);\n      /*Logo styles*/\n\n      --divider-border-colcor: rgb(98, 117, 163);\n      --divider-border-width: 1px;\n\n      --header-title-font: 600 16px/22px var(--widget-font-family);\n      --list-item-key-font: 600 14px/18px var(--widget-font-family);\n      --list-item-value-font: 400 14px/18px var(--widget-font-family);\n      --additional-title-font: 600 14px/18px var(--widget-font-family);\n\n      /*Sidebar styles*/\n      --sidebar-width: 167px;\n      --sidebar-item-text-style: 400 14px/18px var(--widget-font-family);\n      --sidebar-item-text-style-active: 600 14px/16px var(--widget-font-family);\n      --sidebar-item-active-bg: rgb(58, 74, 108);\n      --sidebar-item-padding: 10px;\n\n      /*Table styles*/\n      --table-color-even-row: rgb(26 32 50);\n      --table-title-size: 600 14px/18px var(--widget-font-family);\n      --table-th-size: 600 14px/18px var(--widget-font-family);\n      --table-td-size: 400 14px/18px var(--widget-font-family);\n    }\n\n    /*Normalize CSS */\n    * {\n      margin: 0;\n      padding: 0;\n      outline: none;\n      box-sizing: border-box;\n    }\n\n    *:hover, *:focus, *:active {\n      outline: none;\n    }\n\n    table {\n      width: 100%;\n      border-collapse: collapse;\n      border-spacing: 0;\n    }\n\n    ol, ul {\n      list-style: none;\n    }\n\n    button,\n    input,\n    textarea {\n      font-family: inherit;\n      background: transparent;\n      border: 0;\n      color: inherit;\n      text-align: left;\n    }\n\n    button, a[href] {\n      cursor: pointer;\n    }\n\n    /*Normalize CSS */\n\n\n    /* Custom Scrollbar */\n    ::-webkit-scrollbar {\n      width: 18px;\n      height: 18px;\n    }\n\n    ::-webkit-scrollbar-thumb {\n      background: rgba(137, 151, 180, 1);\n      border: 6px solid var(--widget-bg);\n      border-radius: 63px;\n    }\n\n    ::-webkit-scrollbar-track {\n      background: transparent;\n      border: 4px solid transparent;\n      border-radius: 44px;\n    }\n\n    ::-webkit-scrollbar-corner {\n      background-color: transparent;\n      border-color: transparent;\n    }\n\n    body {\n      font-family: var(--widget-font-family), serif;\n      color: var(--widget-text-color);\n      background-color: var(--widget-bg);\n      overflow: hidden;\n    }\n\n    /*Global styles*/\n    .text-ellipsis {\n      overflow: hidden;\n      text-overflow: ellipsis;\n      white-space: nowrap;\n    }\n\n    .divider-border-style {\n      border: 0;\n      border-color: var(--divider-border-colcor);\n      border-style: solid;\n    }\n\n    .tooltip {\n      max-width: 100%;\n      position: absolute;\n      padding: 8px 16px 8px 16px;\n      border-radius: 4px;\n      background-color: rgb(204 204 218);\n      color: rgb(22, 22, 37);\n      font: 400 14px/18px var(--widget-font-family);\n      z-index: 9;\n      word-wrap: break-word;\n    }\n\n    .tooltip-triangle {\n      position: absolute;\n      top: 100%;\n      border-top: solid 8px rgb(195, 210, 232);\n      border-left: solid 8px transparent;\n      border-right: solid 8px transparent;\n    }\n\n    .input {\n      border: 1px solid #6275A3;\n      border-radius: 4px;\n      padding: 4px 8px;\n      background-color: transparent;\n      font-size: 14px;\n      color: var(--widget-text-color);\n    }\n\n    .input::placeholder {\n      color: var(--widget-text-color);\n    }\n\n    /*Global styles*/\n\n    .wrapper {\n      display: flex;\n      height: 100vh;\n    }\n\n    /*left sidebar*/\n    .left-side {\n      min-width: var(--sidebar-width);\n      max-width: var(--sidebar-width);\n      overflow-y: auto;\n      padding-right: 6px;\n      border-right-width: var(--divider-border-width);\n    }\n\n    .left-side-item {\n      width: 100%;\n      padding: var(--sidebar-item-padding);\n      font: var(--sidebar-item-text-style);\n    }\n\n    .left-side-item.active {\n      background-color: var(--sidebar-item-active-bg);\n      font: var(--sidebar-item-text-style-active);\n    }\n\n    /*left sidebar*/\n\n    .right-side {\n      width: calc(100% - 168px);\n      display: flex;\n      flex-direction: column;\n    }\n\n    .header {\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      gap: 12px;\n      margin-bottom: 12px;\n      border-bottom-width: var(--divider-border-width);\n    }\n\n    .header-title {\n      font: var(--header-title-font);\n      word-break: break-word;\n      padding: 0 6px;\n    }\n\n    .logo {\n      min-width: var(--logo-size);\n      min-height: var(--logo-size);\n      max-width: var(--logo-size);\n      max-height: var(--logo-size);\n      color: var(--logo-color);\n    }\n\n    .main-content {\n      flex: 1;\n      overflow: auto;\n    }\n\n    .list:has(.list-item) {\n      margin-bottom: 32px;\n    }\n\n    .list-item {\n      display: flex;\n      align-items: flex-start;\n      gap: 6px;\n      padding: 3px 6px;\n    }\n\n    .list-item:hover {\n      background-color: var(--widget-row-highlight-bg);\n    }\n\n    .list-item + .list-item {\n      margin-top: 6px;\n    }\n\n    .list-item-text {\n      width: 50%;\n      max-width: 300px;\n      word-break: break-word;\n    }\n\n    .list-item-text-key {\n      font: var(--list-item-key-font);\n      text-transform: uppercase;\n    }\n\n    .list-item-text-value {\n      font: var(--list-item-value-font);\n    }\n\n    .list-item-status-value {\n      color: rgb(200, 200, 200);\n    }\n\n    .list-item-specific-value {\n      display: flex;\n      align-items: center;\n      gap: 8px;\n    }\n\n    .list-item-success-value {\n      color: rgb(153, 215, 201);\n    }\n\n    .list-item-warning-value {\n      color: rgb(255, 243, 113);\n    }\n\n    .list-item-error-value {\n      color: rgba(255, 90, 80);\n    }\n\n    .list-item-status-value:first-letter {\n      text-transform: uppercase;\n    }\n\n    .list-item-screenshot {\n      justify-content: center;\n    }\n\n    .list-item-screenshot-text {\n      display: none;\n    }\n\n    @media screen and (min-width: 700px) {\n      .list-item-text-value {\n        max-width: 100%;\n        width: 100%;\n      }\n\n      .list-item-screenshot-text {\n        display: block;\n      }\n    }\n\n    .tag {\n      display: flex;\n      flex-wrap: wrap;\n      gap: 8px;\n    }\n\n    .tag-item {\n      padding: 2px 12px;\n      background-color: rgb(106, 113, 128);\n      border-radius: 2px;\n    }\n\n    /*Table*/\n    .table-wrapper {\n      padding: 0 6px;\n    }\n\n    .table-wrapper + .table-wrapper {\n      margin-top: 8px;\n    }\n\n    .table-header {\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      gap: 12px;\n      margin-bottom: 12px;\n    }\n\n    .table-title {\n      font: var(--table-title-size);\n      text-transform: uppercase;\n    }\n\n    .table-row-count {\n      display: flex;\n      margin-right: auto;\n      align-items: center;\n      white-space: nowrap;\n      gap: 6px;\n      font: var(--table-title-size);\n    }\n\n    .table-search-input {\n      max-width: 200px;\n    }\n\n    @media screen and (max-width: 700px) {\n      .table-search-input {\n        max-width: 150px;\n      }\n    }\n\n    .table-container {\n      overflow: auto;\n    }\n\n    .table {\n      table-layout: fixed;\n    }\n\n    .table thead {\n      position: sticky;\n      top: 0;\n      z-index: 9;\n    }\n\n    .table th {\n      width: 250px;\n      background-color: var(--widget-row-highlight-bg);\n      color: var(--widget-text-color);\n      font: var(--table-th-size);\n      padding: 6px 12px;\n      text-transform: uppercase;\n      vertical-align: top;\n      text-align: left;\n    }\n\n    .table tr:nth-child(even) {\n      background-color: var(--table-color-even-row);\n    }\n\n    .table-resizable-line {\n      position: absolute;\n      inset: 3px 6px 3px auto;\n      width: 2px;\n      cursor: col-resize;\n      user-select: none;\n      background-color: rgb(98, 117, 163);\n      z-index: 9;\n    }\n\n    .table-resizable-line::before, .table-resizable-line::after {\n      content: '';\n      position: absolute;\n      inset: 0 auto;\n      width: 6px;\n    }\n\n    .table-resizable-line::before {\n      left: -6px;\n    }\n\n    .table-resizable-line::after {\n      right: -6px;\n    }\n\n    .table td {\n      padding: 8px 12px;\n      font: var(--table-td-size);\n      color: var(--widget-text-color);\n      vertical-align: top;\n    }\n\n    .table-button {\n      display: flex;\n      align-items: center;\n      gap: 6px;\n    }\n\n    .table-button-text {\n      text-decoration: underline;\n      line-height: 20px;\n    }\n\n    .table-button-icon {\n      width: 20px;\n      height: 20px;\n    }\n\n    .modal {\n      position: fixed;\n      top: 50%;\n      left: 50%;\n      transform: translate(-50%, -50%);\n      background-color: var(--widget-bg);\n      box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n      padding: 16px;\n      max-width: 90%;\n      min-width: 50%;\n      max-height: 90%;\n      border-radius: 8px;\n      z-index: 9999;\n      overflow: hidden;\n      display: flex;\n      flex-direction: column;\n    }\n\n    .modal-content {\n      overflow: auto;\n    }\n\n    .modal-content img {\n      display: flex;\n      max-width: 100%;\n      max-height: 100%;\n      margin: 0 auto;\n    }\n\n    .modal-content pre {\n      font: var(--table-td-size);\n    }\n\n    .modal-header {\n      margin-bottom: 8px;\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      gap: 6px;\n    }\n\n    .modal-title {\n      font: 600 20px/26px var(--widget-font-family);\n      word-wrap: break-word;\n      flex: 1;\n    }\n\n    .modal-close {\n      width: 24px;\n      height: 24px;\n      display: flex;\n      align-items: center;\n      justify-content: flex-end;\n    }\n\n    .modal-close svg {\n      width: 20px;\n      height: 20px;\n      stroke: #fff;\n    }\n\n    .modal-overlay {\n      position: fixed;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      background-color: rgba(0, 0, 0, 0.5);\n      z-index: 999;\n    }\n  </style>\n </head>\n <body>\n  <div class=\"wrapper\">\n   <div class=\"left-side divider-border-style\" id=\"leftSide\">\n   </div>\n   <div class=\"right-side\" id=\"rightSide\">\n    <div class=\"header divider-border-style\">\n     <h1 class=\"header-title\" id=\"headerTitle\">\n     </h1>\n     <svg class=\"logo\" fill=\"currentColor\" id=\"Layer_1\" style=\"enable-background:new 0 0 25 25;\" version=\"1.1\" viewbox=\"0 0 25 25\" x=\"0px\" xml:space=\"preserve\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" y=\"0px\">\n      <g>\n       <g>\n        <path d=\"M12.2,13.2C8.8,11.6,5.4,10,1.9,8.3v0.3c0,4.8,0,9.6,0,14.3c0,0.1,0,0.2,0,0.3h3.9c0,0,0-0.1,0.1-0.1\n\t\t\tc2.1-3.2,4.2-6.5,6.3-9.7C12.1,13.3,12.2,13.3,12.2,13.2z M22.9,18c0.2-0.1,0.2-0.2,0.2-0.4c0-5.2,0-10.4,0-15.6\n\t\t\tc0-0.1,0-0.1,0-0.2h-2.7c0.5,0.9,0.9,1.7,1.4,2.6c-0.2,0.1-0.3,0.1-0.4,0.2c-0.4,0.1-0.7,0.1-0.9-0.3c-0.1-0.1-0.2-0.3-0.3-0.4\n\t\t\tc-0.9-1.4-2.2-2-3.8-1.8c-1,0.1-1.9,0.3-2.9,0.6C11,3.3,8.6,4.1,6.1,4.8C5.5,5,4.8,5.2,4.1,5.4c3.9,1.8,7.8,3.6,11.8,5.4\n\t\t\tc-2.6,4-5.1,8-7.7,12c0.1,0,0.2,0,0.3-0.1c4.1-1.2,8.1-2.5,12.2-3.8C21.4,18.7,22.2,18.5,22.9,18z M4.9,3.6C6.4,3.1,8,2.6,9.6,2\n\t\t\tc0.1,0,0.2,0,0.2-0.2H1.9v2.7c0.1,0,0.2-0.1,0.3-0.1C3.1,4.1,4,3.8,4.9,3.6z M17,23.1h6.1v-1.8C21,21.9,19,22.5,17,23.1\n\t\t\tC17,23.1,17,23.1,17,23.1z\">\n        </path>\n       </g>\n      </g>\n     </svg>\n    </div>\n    <section class=\"main-content\" id=\"mainContent\">\n    </section>\n   </div>\n  </div>\n  <script>\n   // JSON placeholder [{stepInstanceName}.JsonResult]\n  const actionListData = [{stepInstanceName}.JsonResult];\n\n  // Constant for fields that are allowed to be modified\n  const allowlistedFields = [];\n\n  // Constants for tooltip positioning\n  const tooltipGap = 25;\n  const tooltipTriangleHeight = 8;\n  const tooltipTriangleMinGap = 5;\n  const triangleWidth = 16;\n  let tooltipTimeout = undefined;\n\n  // Get all elements \"table\"\n  const tables = document.getElementsByClassName(\"table\");\n\n  const tooltipDetectResizeObserver = new ResizeObserver((entries) => {\n    for (const entry of entries) {\n      const target = entry.target;\n      if (target) {\n        const {offsetWidth, scrollWidth} = target;\n        if (scrollWidth > offsetWidth) {\n          target.addEventListener(\"mouseover\", createTooltipListener);\n          target.addEventListener(\"mouseout\", removeTooltipListener);\n        } else {\n          target.removeEventListener(\"mouseover\", createTooltipListener);\n          target.removeEventListener(\"mouseout\", removeTooltipListener);\n        }\n      }\n    }\n  });\n\n  // Filter actionListData based on allowlistedFields\n  const filteredActionListData = actionListData\n    .filter(el => el.Entity.trim() !== \"\" && Object.keys(el.EntityResult).length > 0)\n    .map(el => {\n      const filteredEntityResult = filterKeys(el.EntityResult, allowlistedFields);\n      return {...el, EntityResult: filteredEntityResult};\n    })\n    .filter(el => Object.keys(el.EntityResult).length > 0);\n\n  // Update the UI with filtered data\n  if (filteredActionListData.length > 0) {\n    renderKeysInUI(flattenKeys(filteredActionListData[0].EntityResult));\n\n    headerTitle.textContent = decodeURIComponent(filteredActionListData[0].Entity);\n\n    filteredActionListData.forEach((el, index) => {\n      const displayValue = el.Entity;\n      const cleanDisplayValue = removeSpecialSymbols(displayValue);\n      const button = document.createElement(\"button\");\n      button.id = cleanDisplayValue;\n      button.classList.add(\"left-side-item\");\n      button.setAttribute(\"data-menu\", \"item\");\n      if (index === 0) {\n        button.classList.add(\"active\");\n      }\n      renderWithTooltip(button, displayValue);\n      leftSide.append(button);\n    });\n\n\n    if (filteredActionListData.length === 1) {\n      leftSide.remove();\n      rightSide.style.width = \"100%\";\n    } else {\n      leftSide.addEventListener(\"click\", event => {\n        const target = event.target.closest(\"[data-menu='item']\");\n        if (!target) return;\n\n        const id = target.id;\n        const object = filteredActionListData.find(el => removeSpecialSymbols(el.Entity) === id);\n\n        if (object) {\n          mainContent.innerHTML = \"\";\n          renderKeysInUI(flattenKeys(object.EntityResult));\n          headerTitle.textContent = decodeURIComponent(object.Entity);\n          renderModal();\n          for (let i = 0; i < tables.length; i++) {\n            resizableGrid(tables[i]);\n          }\n        }\n        document.querySelectorAll(\"[data-menu='item']\").forEach(item => item.classList.remove(\"active\"));\n        target.classList.add(\"active\");\n\n        mainContent.scrollTop = 0;\n      });\n    }\n\n    renderModal();\n  }\n\n  /**\n   * Recursively flattens a nested object into an array of { key, value } pairs.\n   */\n  function flattenKeys(obj, parentKey = \"\", sep = \" \") {\n    let keys = [];\n    for (let key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        let combinedKey = parentKey ? `${parentKey}${sep}${key}` : key;\n\n        if (Array.isArray(obj[key])) {\n          keys.push({key: combinedKey, value: obj[key]});\n        } else if (typeof obj[key] === \"object\" && obj[key] !== null) {\n          let nestedKeys = flattenKeys(obj[key], combinedKey, sep);\n          keys = [...keys, ...nestedKeys];\n        } else {\n          keys.push({key: combinedKey, value: obj[key]});\n        }\n      }\n    }\n\n    return keys;\n  }\n\n  /**\n   * Returns transposed Array\n   */\n  function transposeArray(array) {\n    const n = array.length;\n    if (n === 0) {\n      return [];\n    }\n    const m = array[0]?.length ?? 0;\n    if (m === 0) {\n      return [];\n    }\n\n    let transposedArray = new Array(m);\n    for (let i = 0; i < m; i++) {\n      transposedArray[i] = new Array(n);\n    }\n\n    for (let i = 0; i < n; i++) {\n      for (let j = 0; j < m; j++) {\n        transposedArray[j][i] = array[i][j];\n      }\n    }\n\n    return transposedArray;\n  }\n\n  /**\n   * Renders keys and their corresponding values in the UI.\n   */\n  function renderKeysInUI(keys) {\n    const mainContent = document.getElementById(\"mainContent\");\n    const ul = document.createElement(\"ul\");\n    ul.classList.add(\"list\");\n\n    keys.forEach(({key, value}) => {\n      if (!value && value !== false && typeof value !== \"number\") return;\n      const li = document.createElement(\"li\");\n      li.classList.add(\"list-item\");\n\n      const spanElement = document.createElement(\"span\");\n      const spanKey = document.createElement(\"span\");\n      spanKey.classList.add(\"list-item-text\", \"list-item-text-key\");\n      renderWithTooltip(spanKey, convertCamelCaseToTitleCase(key));\n\n      if (Array.isArray(value)) {\n        spanElement.classList.add(\"list-item-text\", \"list-item-text-value\", \"tag\");\n        value.forEach(item => {\n          if (typeof item === \"object\") return;\n          const label = document.createElement(\"label\");\n          label.classList.add(\"tag-item\");\n          renderWithTooltip(label, item);\n          spanElement.appendChild(label);\n        });\n\n        li.appendChild(spanKey);\n        li.appendChild(spanElement);\n\n      } else {\n        spanElement.classList.add(\"list-item-text\", \"list-item-text-value\");\n        renderWithTooltip(spanElement, value);\n        const lowerCaseValue = String(value).toLowerCase();\n        if (value === false || lowerCaseValue === \"false\") {\n          const icon = `<svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M12.7511 12.7518C15.3754 10.1275 15.3754 5.8726 12.7511 3.24827C10.1267 0.623948 5.87186 0.623948 3.24754 3.24827C0.623216 5.8726 0.623216 10.1275 3.24754 12.7518C5.87186 15.3761 10.1267 15.3761 12.7511 12.7518ZM6.23436 10.9416C5.90943 11.2665 5.38266 11.2665 5.05773 10.9416C4.73281 10.6167 4.73281 10.0899 5.05773 9.76497L6.82267 8.00003L5.05773 6.23509C4.73281 5.91017 4.73281 5.38339 5.05773 5.05847C5.38266 4.73354 5.90943 4.73354 6.23436 5.05847L7.9993 6.8234L9.76424 5.05847C10.0892 4.73354 10.6159 4.73354 10.9409 5.05847C11.2658 5.38339 11.2658 5.91017 10.9409 6.23509L9.17592 8.00003L10.9409 9.76497C11.2658 10.0899 11.2658 10.6167 10.9409 10.9416C10.6159 11.2665 10.0892 11.2665 9.76424 10.9416L7.9993 9.17666L6.23436 10.9416Z\" fill=\"#b5b5b5\"/></svg>`;\n          spanElement.classList.add(\"list-item-status-value\", \"list-item-specific-value\");\n          spanElement.innerHTML = `${icon} False`;\n        } else if (value === true || lowerCaseValue === \"true\") {\n          const icon = `<svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M8.00065 1.33325C4.32065 1.33325 1.33398 4.31992 1.33398 7.99992C1.33398 11.6799 4.32065 14.6666 8.00065 14.6666C11.6807 14.6666 14.6673 11.6799 14.6673 7.99992C14.6673 4.31992 11.6807 1.33325 8.00065 1.33325ZM6.66732 11.3333L3.33398 7.99992L4.27398 7.05992L6.66732 9.44659L11.7273 4.38659L12.6673 5.33325L6.66732 11.3333Z\" fill=\"#b5b5b5\"/></svg>`;\n          spanElement.classList.add(\"list-item-status-value\", \"list-item-specific-value\");\n          spanElement.innerHTML = `${icon} True`;\n        } else if (lowerCaseValue === \"success\") {\n          const icon = `<svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M8.00065 1.33325C4.32065 1.33325 1.33398 4.31992 1.33398 7.99992C1.33398 11.6799 4.32065 14.6666 8.00065 14.6666C11.6807 14.6666 14.6673 11.6799 14.6673 7.99992C14.6673 4.31992 11.6807 1.33325 8.00065 1.33325ZM6.66732 11.3333L3.33398 7.99992L4.27398 7.05992L6.66732 9.44659L11.7273 4.38659L12.6673 5.33325L6.66732 11.3333Z\" fill=\"#99D7CA\"/></svg>`;\n          spanElement.classList.add(\"list-item-success-value\", \"list-item-specific-value\");\n          spanElement.innerHTML = `${icon} Success`;\n        } else if (lowerCaseValue === \"warning\") {\n          const icon = `<svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M8.00065 1.33325C4.32065 1.33325 1.33398 4.31992 1.33398 7.99992C1.33398 11.6799 4.32065 14.6666 8.00065 14.6666C11.6807 14.6666 14.6673 11.6799 14.6673 7.99992C14.6673 4.31992 11.6807 1.33325 8.00065 1.33325ZM8.66732 11.3333H7.33398V7.33325H8.66732V11.3333ZM8.66732 5.99992H7.33398V4.66659H8.66732V5.99992Z\" fill=\"#FFF371\"/></svg>`;\n          spanElement.classList.add(\"list-item-warning-value\", \"list-item-specific-value\");\n          spanElement.innerHTML = `${icon} Warning`;\n        } else if (lowerCaseValue === \"error\") {\n          const icon = `<svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M8.00065 1.33325C4.32065 1.33325 1.33398 4.31992 1.33398 7.99992C1.33398 11.6799 4.32065 14.6666 8.00065 14.6666C11.6807 14.6666 14.6673 11.6799 14.6673 7.99992C14.6673 4.31992 11.6807 1.33325 8.00065 1.33325ZM8.66732 11.3333H7.33398V9.99992H8.66732V11.3333ZM8.66732 8.66659H7.33398V4.66659H8.66732V8.66659Z\" fill=\"#FF5A50\"/></svg>`;\n          spanElement.classList.add(\"list-item-error-value\", \"list-item-specific-value\");\n          spanElement.innerHTML = `${icon} Error`;\n        } else if (lowerCaseValue === \"informational\") {\n          const icon = `<svg width=\"27\" height=\"6\" viewBox=\"0 0 27 6\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><circle cx=\"3\" cy=\"3\" r=\"3\" fill=\"#B2B6BD\"/><circle cx=\"10\" cy=\"3\" r=\"3\" fill=\"#B2B6BD\"/><circle cx=\"17\" cy=\"3\" r=\"3\" fill=\"#B2B6BD\"/><circle cx=\"24\" cy=\"3\" r=\"3\" fill=\"#B2B6BD\"/></svg>`;\n          spanElement.classList.add(\"list-item-specific-value\");\n          spanElement.innerHTML = `${icon} Informational`;\n        } else if (lowerCaseValue === \"low\") {\n          const icon = `<svg width=\"27\" height=\"6\" viewBox=\"0 0 27 6\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><circle cx=\"3\" cy=\"3\" r=\"3\" fill=\"#78D9EC\"/><circle cx=\"10\" cy=\"3\" r=\"3\" fill=\"#B2B6BD\"/><circle cx=\"17\" cy=\"3\" r=\"3\" fill=\"#B2B6BD\"/><circle cx=\"24\" cy=\"3\" r=\"3\" fill=\"#B2B6BD\"/></svg>`;\n          spanElement.classList.add(\"list-item-specific-value\");\n          spanElement.innerHTML = `${icon} Low`;\n        } else if (lowerCaseValue === \"medium\") {\n          const icon = `<svg width=\"27\" height=\"6\" viewBox=\"0 0 27 6\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><circle cx=\"3\" cy=\"3\" r=\"3\" fill=\"#FFF371\"/><circle cx=\"10\" cy=\"3\" r=\"3\" fill=\"#FFF371\"/><circle cx=\"17\" cy=\"3\" r=\"3\" fill=\"#B2B6BD\"/><circle cx=\"24\" cy=\"3\" r=\"3\" fill=\"#B2B6BD\"/></svg>`;\n          spanElement.classList.add(\"list-item-specific-value\");\n          spanElement.innerHTML = `${icon} Medium`;\n        } else if (lowerCaseValue === \"high\") {\n          const icon = `<svg width=\"27\" height=\"6\" viewBox=\"0 0 27 6\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><circle cx=\"3\" cy=\"3\" r=\"3\" fill=\"#FA903E\"/><circle cx=\"10\" cy=\"3\" r=\"3\" fill=\"#FA903E\"/><circle cx=\"17\" cy=\"3\" r=\"3\" fill=\"#FA903E\"/><circle cx=\"24\" cy=\"3\" r=\"3\" fill=\"#B2B6BD\"/></svg>`;\n          spanElement.classList.add(\"list-item-specific-value\");\n          spanElement.innerHTML = `${icon} High`;\n        } else if (lowerCaseValue === \"critical\") {\n          const icon = `<svg width=\"27\" height=\"6\" viewBox=\"0 0 27 6\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><circle cx=\"3\" cy=\"3\" r=\"3\" fill=\"#EC453B\"/><circle cx=\"10\" cy=\"3\" r=\"3\" fill=\"#EC453B\"/><circle cx=\"17\" cy=\"3\" r=\"3\" fill=\"#EC453B\"/><circle cx=\"24\" cy=\"3\" r=\"3\" fill=\"#EC453B\"/></svg>`;\n          spanElement.classList.add(\"list-item-specific-value\");\n          spanElement.innerHTML = `${icon} Critical`;\n        } else if (/\\.(png|jpg|jpeg|gif|bmp|webp)$/.test(lowerCaseValue)) {\n          const icon = `<svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><rect x=\"1\" y=\"1\" width=\"14\" height=\"14\" fill=\"white\" stroke=\"#35424F\" stroke-width=\"2\" stroke-linejoin=\"round\"/><path d=\"M12.6284 11.4587L10.0829 5.94357C10.0201 5.80781 9.89075 5.71533 9.74227 5.69963C9.59209 5.68393 9.44827 5.74714 9.35833 5.86678L7.06745 8.92129L5.70989 7.90312C5.60892 7.82761 5.47995 7.80046 5.35777 7.8293C5.23517 7.85815 5.13208 7.94003 5.07565 8.05245L3.3787 11.4464C3.31295 11.5779 3.32016 11.734 3.39737 11.8591C3.47458 11.9843 3.61119 12.0607 3.7584 12.0607H12.2432C12.3878 12.0607 12.5227 11.9868 12.6004 11.8651C12.6784 11.7433 12.689 11.5902 12.6284 11.4587Z\" fill=\"#35424F\"/><path d=\"M6.30396 6.1216C7.00686 6.1216 7.57668 5.55179 7.57668 4.84889C7.57668 4.14599 7.00686 3.57617 6.30396 3.57617C5.60106 3.57617 5.03125 4.14599 5.03125 4.84889C5.03125 5.55179 5.60106 6.1216 6.30396 6.1216Z\" fill=\"#35424F\"/></svg>`;\n          spanElement.classList.add(\"list-item-specific-value\");\n          spanElement.innerHTML = `<button class=\"list-item-screenshot tag tag-item\" data-modal=\"${value}\" data-modal-button=\"item\" data-modal-img=\"true\">${icon} <span class=\"list-item-screenshot-text text-ellipsis\">Screenshot</span></button>`;\n        }\n        li.appendChild(spanElement);\n      }\n\n      if (!spanElement.textContent) {\n        return;\n      }\n\n      li.insertBefore(spanKey, li.firstChild);\n      ul.appendChild(li);\n    });\n\n    mainContent.appendChild(ul);\n\n    keys.forEach(({key, value}) => {\n      if (Array.isArray(value)) {\n        if (typeof value[0] !== \"object\") {\n          return;\n        }\n        const tableWrapper = document.createElement(\"div\");\n        tableWrapper.classList.add(\"table-wrapper\");\n        const tableHeader = document.createElement(\"div\");\n        tableHeader.classList.add(\"table-header\");\n        const tableSearchInput = document.createElement(\"input\");\n        tableSearchInput.classList.add(\"input\", \"table-search-input\");\n        tableSearchInput.setAttribute(\"placeholder\", \"Search (regex)\");\n        const tableTitle = document.createElement(\"h2\");\n        tableTitle.classList.add(\"table-title\");\n        renderWithTooltip(tableTitle, `${convertCamelCaseToTitleCase(key)} Table`);\n        const rowCountContainer = document.createElement(\"div\");\n        rowCountContainer.classList.add(\"table-row-count\");\n\n        function updateRowCount() {\n          const visibleRows = Array.from(tbody.querySelectorAll(\"tr\")).filter(row => row.style.display !== \"none\");\n          const rowCount = visibleRows.length;\n          const rowCountMessage = rowCount === 1 ? \"Record found\" : \"Records found\";\n          rowCountContainer.innerHTML = `/ <span>${rowCount}</span> <span>${rowCountMessage}</span>`;\n        }\n\n        const tableContainer = document.createElement(\"div\");\n        const table = document.createElement(\"table\");\n        tableContainer.classList.add(\"table-container\");\n        table.classList.add(\"table\");\n        tableContainer.append(table);\n        const thead = document.createElement(\"thead\");\n        const tbody = document.createElement(\"tbody\");\n\n        const tableDataMap = new Map();\n        value.forEach((valuesObject, index) => {\n          if (typeof valuesObject === \"object\") {\n            for (const [key, value] of Object.entries(valuesObject)) {\n              const currentValues = tableDataMap.get(key);\n              if (currentValues) {\n                if (currentValues.length < index) {\n                  tableDataMap.set(key, currentValues.concat(new Array(index - currentValues.length).fill(\"\"), [value]));\n                } else {\n                  tableDataMap.set(key, [...currentValues, value]);\n                }\n              } else {\n                tableDataMap.set(key, [...new Array(index).fill(\"N/A\"), value]);\n              }\n            }\n          }\n        });\n\n        const headerRow = document.createElement(\"tr\");\n        Array.from(tableDataMap.keys()).forEach((subKey) => {\n          const th = document.createElement(\"th\");\n          th.textContent = convertCamelCaseToTitleCase(subKey);\n          headerRow.appendChild(th);\n          renderWithTooltip(th, convertCamelCaseToTitleCase(subKey));\n        });\n        thead.appendChild(headerRow);\n\n        const rowsCount = value.length;\n        const tableValues = Array.from(tableDataMap.values());\n        const valuesToRender = tableValues.map((values) => {\n          const actualValuesCount = values.length;\n          return actualValuesCount < rowsCount ? values.concat(new Array(rowsCount - actualValuesCount).fill(\"\")) : values;\n        });\n\n        transposeArray(valuesToRender).forEach((values) => {\n          const bodyRow = document.createElement(\"tr\");\n\n          values.forEach(subValue => {\n            const td = document.createElement(\"td\");\n            if (typeof subValue === \"object\") {\n              const button = document.createElement(\"button\");\n              button.innerHTML = `<span class=\"table-button-icon\"><svg width=\"100%\" height=\"100%\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                                    <path d=\"M5.2 4.09951C5.01435 4.09951 4.8363 4.17326 4.70503 4.30454C4.57375 4.43581 4.5 4.61386 4.5 4.79951V18.7995C4.5 19.1861 4.8134 19.4995 5.2 19.4995H8.7C9.0866 19.4995 9.4 19.1861 9.4 18.7995C9.4 18.4129 9.0866 18.0995 8.7 18.0995H5.9V5.49951H8.7C9.0866 5.49951 9.4 5.18611 9.4 4.79951C9.4 4.41291 9.0866 4.09951 8.7 4.09951H5.2Z\" fill=\"white\"/>\n                                                    <path d=\"M19.2 4.09951H15.7C15.3134 4.09951 15 4.41291 15 4.79951C15 5.18611 15.3134 5.49951 15.7 5.49951H18.5V18.0995H15.7C15.3134 18.0995 15 18.4129 15 18.7995C15 19.1861 15.3134 19.4995 15.7 19.4995H19.2C19.5866 19.4995 19.9 19.1861 19.9 18.7995V4.79951C19.9 4.41291 19.5866 4.09951 19.2 4.09951Z\" fill=\"white\"/>\n                                                    </svg></span>\n                                                    <span class=\"table-button-text\">Data Object</span>`;\n              button.classList.add(\"table-button\");\n              button.setAttribute(\"data-modal\", formatData(subValue));\n              button.setAttribute(\"data-modal-button\", \"item\");\n              if (Array.isArray(subValue) && subValue.length === 0 || subValue === null) {\n                td.innerHTML = \"N/A\";\n              } else {\n                td.appendChild(button);\n                button.setAttribute(\"data-modal-title\", convertCamelCaseToTitleCase(key));\n              }\n            } else {\n              if (subValue !== \"\") {\n                renderWithTooltip(td, subValue);\n              } else {\n                td.textContent = \"N/A\";\n              }\n            }\n            bodyRow.appendChild(td);\n          });\n          thead.appendChild(headerRow);\n          tbody.appendChild(bodyRow);\n        });\n\n        // Add search functionality\n        tableSearchInput.addEventListener(\"input\", () => {\n          const searchValue = tableSearchInput.value;\n          let regex;\n\n          try {\n            regex = new RegExp(searchValue, 'i');\n          } catch (e) {\n            regex = null;\n          }\n\n          const rows = tbody.querySelectorAll(\"tr\");\n\n          rows.forEach(row => {\n            const cells = row.querySelectorAll(\"td\");\n            const match = Array.from(cells).some(cell => {\n              const textContent = cell.textContent.toLowerCase();\n              return regex ? regex.test(textContent) : textContent.includes(searchValue.toLowerCase());\n            });\n            row.style.display = match ? \"\" : \"none\";\n          });\n\n          updateRowCount();\n        });\n\n        updateRowCount();\n\n        table.appendChild(thead);\n        table.appendChild(tbody);\n        tableHeader.appendChild(tableTitle);\n        tableHeader.appendChild(rowCountContainer);\n        tableHeader.appendChild(tableSearchInput);\n        tableWrapper.appendChild(tableHeader);\n        tableWrapper.appendChild(tableContainer);\n        mainContent.appendChild(tableWrapper);\n      }\n    });\n  }\n\n  /**\n   * Utility function to filter keys based on allowlistedFields\n   */\n  function filterKeys(obj, allowedKeys) {\n    if (allowedKeys.length === 0) {\n      return obj;\n    }\n    const filtered = {};\n    allowedKeys.forEach(key => {\n      if (obj.hasOwnProperty(key)) {\n        filtered[key] = obj[key];\n      }\n    });\n    return filtered;\n  }\n\n  /**\n   * Formats data object into a human-readable string representation.\n   */\n  function formatData(data) {\n    const isObject = obj => obj && obj.constructor === ({}).constructor;\n    const formatIfObject = item => isObject(item) ? JSON.stringify(item, null, 4) : item;\n    if (Array.isArray(data)) {\n      return data.map(\n        item => Array.isArray(item) ? formatData(item) : formatIfObject(item),\n      ).join(\",\\n\");\n    }\n    return formatIfObject(data);\n  }\n\n  /**\n   * Removes special symbols from a string.\n   */\n  function removeSpecialSymbols(str) {\n    return str.replace(/[^\\w\\s]/gi, \"\");\n  }\n\n  /**\n   * Converts camelCaseName to Title Case.\n   */\n  function convertCamelCaseToTitleCase(str) {\n    let result = str.replace(/_/g, \" \");\n    result = result.replace(/([a-z])([A-Z])/g, \"$1 $2\");\n    result = result.replace(/\\b\\w/g, char => char.toUpperCase());\n    return result;\n  }\n\n  /**\n   * Creates a modal dialog with given content.\n   */\n  function createModal(content, title, isImage) {\n    const modal = document.createElement(\"div\");\n    modal.classList.add(\"modal\");\n    const modalOverlay = document.createElement(\"div\");\n    modalOverlay.classList.add(\"modal-overlay\");\n    document.body.append(modalOverlay);\n    const modalHeader = document.createElement(\"div\");\n    modalHeader.classList.add(\"modal-header\");\n    const modalTitle = document.createElement(\"h2\");\n    modalTitle.classList.add(\"modal-title\");\n    modalTitle.textContent = title;\n    const closeButton = document.createElement(\"button\");\n    closeButton.innerHTML = `\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n            <path d=\"M18 6L6 18M6 6l12 12\" />\n        </svg>`;\n    closeButton.classList.add(\"modal-close\");\n    modalHeader.append(modalTitle);\n    modalHeader.append(closeButton);\n    modal.append(modalHeader);\n    const modalContent = document.createElement(\"div\");\n    modalContent.classList.add(\"modal-content\");\n    modal.append(modalContent);\n\n    if (isImage) {\n      const imgElement = document.createElement(\"img\");\n      imgElement.src = content;\n\n      checkImageUrl(content, function (isValid) {\n        if (isValid) {\n          imgElement.src = content;\n        } else {\n          modalContent.innerText = \"Image URL is broken\";\n        }\n      });\n      modalContent.append(imgElement);\n    } else {\n      const preElement = document.createElement(\"pre\");\n      preElement.textContent = content;\n      modalContent.append(preElement);\n    }\n    document.body.append(modal);\n    closeButton.addEventListener(\"click\", () => {\n      modal.remove();\n      modalOverlay.remove();\n    });\n  }\n\n\n  /**\n   * Attaches modal creation behavior to elements with data-modal-button attribute.\n   */\n  function renderModal() {\n    document.querySelectorAll(\"[data-modal-button=\\\"item\\\"]\").forEach((button) => {\n      button.addEventListener(\"click\", () => {\n        const content = button.getAttribute(\"data-modal\");\n        const title = button.getAttribute(\"data-modal-title\");\n        const isImage = button.getAttribute(\"data-modal-img\") === \"true\";\n        createModal(content, title, isImage);\n      });\n    });\n  }\n\n  /**\n   * Creates a tooltip with given text and position.\n   */\n  function createTooltip(text, x, y, trianglePointX, placeAtBottom, contentOverflowWindow) {\n    removeTooltip();\n    const tooltip = document.createElement(\"div\");\n    tooltip.classList.add(\"tooltip\");\n    tooltip.textContent = text;\n    tooltip.style.left = `${x}px`;\n    tooltip.style.top = `${y}px`;\n    if (contentOverflowWindow) {\n      tooltip.style.right = `${tooltipGap}px`;\n    }\n    const tooltipTriangle = document.createElement(\"span\");\n    tooltipTriangle.classList.add(\"tooltip-triangle\");\n    tooltipTriangle.style.left = `${trianglePointX}px`;\n    if (placeAtBottom) {\n      tooltipTriangle.style.top = \"-8px\";\n      tooltipTriangle.style.borderTop = \"0\";\n      tooltipTriangle.style.borderBottom = \"solid 8px rgb(195, 210, 232)\";\n    }\n    tooltip.append(tooltipTriangle);\n    document.body.append(tooltip);\n  }\n\n  /**\n   * Removes any existing tooltip from the DOM.\n   */\n  function removeTooltip() {\n    const tooltip = document.querySelectorAll(\".tooltip\");\n    tooltip.forEach((item) => {\n      if (item) {\n        item.remove();\n      }\n    });\n  }\n\n  /**\n   * Sets a timeout to calculate and show tooltip position after a delay.\n   */\n  function createTooltipListener(event) {\n    tooltipTimeout = setTimeout(() => calculateTooltipPosition(event), 1000);\n  }\n\n  /**\n   * Clears any existing tooltip timeout and removes the tooltip.\n   */\n  function removeTooltipListener() {\n    if (tooltipTimeout) {\n      clearTimeout(tooltipTimeout);\n    }\n    removeTooltip();\n  }\n\n  /**\n   * Calculates and positions the tooltip relative to the event target.\n   */\n  function calculateTooltipPosition(event) {\n    const target = event.target;\n    if (!target) {\n      return;\n    }\n    const viewportWidth = window.innerWidth;\n    const rect = target.getBoundingClientRect();\n    const tooltipContent = document.createElement(\"div\");\n    tooltipContent.classList.add(\"tooltip\");\n    tooltipContent.style.top = \"0\";\n    tooltipContent.textContent = target.textContent;\n    document.body.appendChild(tooltipContent);\n    let contentOverflowWindow = false;\n    // Determine if window width would not be enough for content of tooltip\n    if (tooltipGap * 2 + tooltipContent.offsetWidth >= viewportWidth) {\n      // setting left, right positions to get correct tooltipContentWidth and tooltipContentHeight\n      tooltipContent.style.left = `${tooltipGap}px`;\n      tooltipContent.style.right = `${tooltipGap}px`;\n      contentOverflowWindow = true;\n    }\n    const tooltipContentWidth = tooltipContent.offsetWidth;\n    const tooltipContentHeight = tooltipContent.offsetHeight;\n    tooltipContent.remove();\n    const elementMidX = rect.left + (rect.width / 2);\n    const placeOnRight = elementMidX + tooltipContentWidth / 2 + tooltipGap > viewportWidth;\n    const x = Math.max(tooltipGap, placeOnRight ? viewportWidth - tooltipContentWidth - tooltipGap : elementMidX - tooltipContentWidth / 2);\n    const placeAtBottom = rect.top < tooltipContentHeight;\n    const y = placeAtBottom ? rect.bottom + tooltipTriangleHeight : rect.top - tooltipContentHeight;\n    // Calculating trianglePointX relative to window width, to guarantee that it is not out of window\n    const trianglePointX = Math.min(Math.max(elementMidX - x, tooltipTriangleMinGap), tooltipContentWidth - tooltipTriangleMinGap - triangleWidth);\n    createTooltip(target.textContent, x, y, trianglePointX, placeAtBottom, contentOverflowWindow);\n  }\n\n  /**\n   * Renders an item with text and sets up tooltip behavior.\n   */\n  function renderWithTooltip(item, text) {\n    item.innerText = decodeURIComponent(text);\n    item.classList.add(\"text-ellipsis\");\n    tooltipDetectResizeObserver.observe(item);\n  }\n\n  function checkImageUrl(url, callback) {\n    const img = new Image();\n    img.onload = function () {\n      callback(true);\n    };\n    img.onerror = function () {\n      callback(false);\n    };\n    img.src = url;\n  }\n\n  /**\n   * Function to make a table resizable\n   */\n  function resizableGrid(table) {\n    const row = table.getElementsByTagName(\"tr\")[0],\n      cols = row ? row.children : undefined;\n    if (!cols) return;\n\n    for (let i = 0; i < cols.length; i++) {\n      const div = createDiv();\n      cols[i].appendChild(div);\n      cols[i].style.position = \"relative\";\n      setListeners(div);\n    }\n\n    function setListeners(div) {\n      let pageX, curCol, nxtCol, curColWidth, nxtColWidth, tableWidth;\n\n      div.addEventListener(\"mousedown\", function (e) {\n        curCol = e.target.parentElement;\n        nxtCol = curCol.nextElementSibling;\n        pageX = e.pageX;\n\n        const padding = paddingDiff(curCol);\n\n        curColWidth = curCol.offsetWidth - padding;\n        if (nxtCol) {\n          nxtColWidth = nxtCol.offsetWidth - padding;\n        }\n      });\n\n      document.addEventListener(\"mousemove\", function (e) {\n        if (curCol) {\n          const diffX = e.pageX - pageX;\n          if (nxtCol) {\n            nxtCol.style.width = nxtColWidth - diffX + \"px\";\n          }\n          curCol.style.width = curColWidth + diffX + \"px\";\n          table.style.width = tableWidth + diffX + \"px\";\n          removeTooltipListener();\n        }\n      });\n\n      document.addEventListener(\"mouseup\", function () {\n        curCol = undefined;\n        nxtCol = undefined;\n        pageX = undefined;\n        nxtColWidth = undefined;\n        curColWidth = undefined;\n        tableWidth = undefined;\n      });\n    }\n\n    function createDiv() {\n      const div = document.createElement(\"div\");\n      div.classList.add(\"table-resizable-line\");\n      return div;\n    }\n\n    function paddingDiff(col) {\n      if (getStyleVal(col, \"box-sizing\") === \"border-box\") {\n        return 0;\n      }\n\n      const padLeft = getStyleVal(col, \"padding-left\");\n      const padRight = getStyleVal(col, \"padding-right\");\n      return parseInt(padLeft) + parseInt(padRight);\n    }\n\n    function getStyleVal(elm, css) {\n      return window.getComputedStyle(elm, null).getPropertyValue(css);\n    }\n  }\n\n  for (let i = 0; i < tables.length; i++) {\n    resizableGrid(tables[i]);\n  }\n\n  /**\n   * Counts the number of rows in each table's body.\n   */\n  function countTableBodyRows() {\n    const tables = document.getElementsByClassName(\"table\");\n\n    const rowCounts = [];\n\n    for (let i = 0; i < tables.length; i++) {\n      const table = tables[i];\n      const tbody = table.querySelector(\"tbody\");\n\n      if (tbody) {\n        const rows = tbody.getElementsByTagName(\"tr\");\n        rowCounts.push(rows.length);\n      } else {\n        rowCounts.push(0);\n      }\n    }\n\n    return rowCounts;\n  }\n\n  countTableBodyRows();\n  </script>\n </body>\n</html>\n",
                        "htmlHeight": 400,
                        "safeRendering": false,
                        "type": 3,
                        "widgetDefinitionScope": 2
                    }
                }
            ],
            "roles": [
                1,
                2,
                3,
                4,
                5,
                6
            ],
            "creationTimeUnixTimeInMs": 1751183628186
        }
    ],
    "creationSource": 1
}