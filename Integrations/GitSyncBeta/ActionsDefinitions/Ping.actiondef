{"Name":"Ping","Description":"Test connectivity to GitSync","Script":"import re\n\nfrom GitSyncManager import GitSyncManager\nfrom SiemplifyAction import SiemplifyAction\nfrom SiemplifyUtils import output_handler\nfrom constants import COMMIT_AUTHOR_REGEX, DEFAULT_AUTHOR, DEFAULT_USERNAME\n\n\nSCRIPT_NAME = \"Ping\"\nINTEGRATION_NAME = \"GitSync\"\n\n\n@output_handler\ndef main():\n    siemplify = SiemplifyAction()\n    siemplify.script_name = SCRIPT_NAME\n\n    repo_url = siemplify.extract_configuration_param(INTEGRATION_NAME, \"Repo URL\")\n    branch = siemplify.extract_configuration_param(INTEGRATION_NAME, \"Branch\")\n    git_password = siemplify.extract_configuration_param(\n        INTEGRATION_NAME, \"Git Password/Token/SSH Key\"\n    )\n    git_username = siemplify.extract_configuration_param(\n        INTEGRATION_NAME, \"Git Username\", default_value=DEFAULT_USERNAME\n    )\n    git_author = siemplify.extract_configuration_param(\n        INTEGRATION_NAME, \"Commit Author\", default_value=DEFAULT_AUTHOR\n    )\n    smp_verify = siemplify.extract_configuration_param(\n        INTEGRATION_NAME, \"Siemplify Verify SSL\", input_type=bool\n    )\n    git_verify = siemplify.extract_configuration_param(\n        INTEGRATION_NAME, \"Git Verify SSL\", input_type=bool\n    )\n\n    if not re.fullmatch(COMMIT_AUTHOR_REGEX, git_author):\n        raise Exception(\n            \"Commit Author parameter must be in the following format: Name <example@gmail.com>\"\n        )\n\n    try:\n        gitsync = GitSyncManager(\n            siemplify,\n            repo_url,\n            branch,\n            git_password,\n            git_username,\n            git_author,\n            smp_verify,\n            git_verify,\n        )\n    except Exception as e:\n        raise Exception(f\"Couldn't connect to git\\nError: {e}\")\n\n    try:\n        gitsync.api.test_connectivity()\n    except:\n        raise Exception(\"Couldn't connect to Chronicle SOAR.\")\n\n    siemplify.end(\"True\", True)\n\n\nif __name__ == \"__main__\":\n    main()\n","IntegrationIdentifier":"GitSyncBeta","ScriptResultName":"is_success","DynamicResultsMetadata":[{"ResultName":"JsonResult","ResultExample":null,"ShowResult":true}],"Creator":"Admin","IsEnabled":false,"IsCustom":true,"IsSystem":false,"Version":1.0,"TimeoutSeconds":600,"IsAsync":null,"AsyncPollingIntervalInSeconds":3600,"TotalIntervalTimeoutForAsyncInSeconds":86400,"Parameters":[],"DefaultResultValue":null,"PythonVersion":"None","SimulationData":{"Entities":null},"SimulationDataJson":null}