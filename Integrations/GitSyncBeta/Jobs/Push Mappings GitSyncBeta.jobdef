{"Name":"Push Mappings GitSyncBeta","Integration":"GitSyncBeta","Script":"from GitSyncManager import GitSyncManager\nfrom SiemplifyJob import SiemplifyJob\nfrom SiemplifyUtils import output_handler\nfrom definitions import Mapping\n\nSCRIPT_NAME = \"Push Mappings\"\n\n\n@output_handler\ndef main():\n    siemplify = SiemplifyJob()\n    siemplify.script_name = SCRIPT_NAME\n\n    commit_msg = siemplify.extract_job_param(\"Commit\")\n    source = siemplify.extract_job_param(\"Source\")\n    readme_addon = siemplify.extract_job_param(\"Readme Addon\", input_type=str)\n\n    try:\n        gitsync = GitSyncManager.from_siemplify_object(siemplify)\n        siemplify.LOGGER.info(f\"Pushing mappings of {source}\")\n        records = [\n            x\n            for x in gitsync.api.get_ontology_records()\n            if x.get(\"source\").lower() == source.lower()\n        ]\n        rules = []\n        for record in records:\n            record[\"exampleEventFields\"] = []  # remove event assets\n            rule = gitsync.api.get_mapping_rules(\n                record[\"source\"], record[\"product\"], record[\"eventName\"]\n            )\n            for r in rule[\"familyFields\"] + rule[\"systemFields\"]:\n                # remove bad rules with no source\n                if (\n                    r[\"mappingRule\"][\"source\"]\n                    and r[\"mappingRule\"][\"source\"].lower() == source.lower()\n                ):\n                    rules.append(rule)\n                    break\n\n        if readme_addon:\n            siemplify.LOGGER.info(\n                \"Readme addon found - adding to GitSync metadata file (GitSync.json)\"\n            )\n            gitsync.content.metadata.set_readme_addon(\"Mappings\", source, readme_addon)\n\n        gitsync.content.push_mapping(Mapping(source, records, rules))\n        gitsync.commit_and_push(commit_msg)\n\n    except Exception as e:\n        siemplify.LOGGER.error(f\"General error performing Job {SCRIPT_NAME}\")\n        siemplify.LOGGER.exception(e)\n        raise\n\n\nif __name__ == \"__main__\":\n    main()\n","Creator":"Admin","RunIntervalInSeconds":900,"Description":"Exports mappings  to the repo.","IsEnabled":true,"IsCustom":true,"Version":1,"IsSystem":false,"Parameters":[{"JobDefinitionId":49,"IsMandatory":true,"DefaultValue":"","Description":"Commit message","Name":"Commit","Type":2},{"JobDefinitionId":49,"IsMandatory":false,"DefaultValue":null,"Description":"Optional parameter to override the one found in the integration instance","Name":"Repo URL","Type":2},{"JobDefinitionId":49,"IsMandatory":false,"DefaultValue":null,"Description":"Optional parameter to override the one found in the integration instance","Name":"Branch","Type":2},{"JobDefinitionId":49,"IsMandatory":false,"DefaultValue":"","Description":"Optional parameter to override the one found in the integration instance","Name":"Commit Author","Type":2},{"JobDefinitionId":49,"IsMandatory":true,"DefaultValue":"","Description":null,"Name":"Source","Type":2},{"JobDefinitionId":49,"IsMandatory":false,"DefaultValue":"","Description":"Appends markdown to the end of the readme file of all mappings pushed this run","Name":"Readme Addon","Type":2}],"PythonVersion":"None"}