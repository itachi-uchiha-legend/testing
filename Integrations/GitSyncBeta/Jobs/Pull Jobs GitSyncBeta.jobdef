{"Name":"Pull Jobs GitSyncBeta","Integration":"GitSyncBeta","Script":"from GitSyncManager import GitSyncManager\nfrom SiemplifyJob import SiemplifyJob\nfrom SiemplifyUtils import output_handler\n\nSCRIPT_NAME = \"Pull Jobs\"\n\n\n@output_handler\ndef main():\n    siemplify = SiemplifyJob()\n    siemplify.script_name = SCRIPT_NAME\n\n    job_names = list(\n        [\n            _f\n            for _f in [\n                x.strip()\n                for x in siemplify.extract_job_param(\"Job Whitelist\", \" \").split(\",\")\n            ]\n            if _f\n        ]\n    )\n\n    try:\n        gitsync = GitSyncManager.from_siemplify_object(siemplify)\n\n        for job in job_names:\n            siemplify.LOGGER.info(f\"Pulling {job}\")\n            job = gitsync.content.get_job(job)\n            gitsync.install_job(job)\n            siemplify.LOGGER.info(f\"Successfully pulled Job {job.name}\")\n\n    except Exception as e:\n        siemplify.LOGGER.error(f\"General error performing Job {SCRIPT_NAME}\")\n        siemplify.LOGGER.exception(e)\n        raise\n\n    siemplify.end_script()\n\n\nif __name__ == \"__main__\":\n    main()\n","Creator":"Admin","RunIntervalInSeconds":900,"Description":"Imports a job from the repo.","IsEnabled":true,"IsCustom":true,"Version":1,"IsSystem":false,"Parameters":[{"JobDefinitionId":134,"IsMandatory":true,"DefaultValue":"","Description":"List of Job names, separated by a comma, to pull from the repo","Name":"Job Whitelist","Type":2},{"JobDefinitionId":134,"IsMandatory":false,"DefaultValue":null,"Description":"Optional parameter to override the one found in the integration instance","Name":"Repo URL","Type":2},{"JobDefinitionId":134,"IsMandatory":false,"DefaultValue":null,"Description":"Optional parameter to override the one found in the integration instance","Name":"Branch","Type":2}],"PythonVersion":"None"}