{"Name":"Ping","Description":"Use the Ping action to test the connectivity to Credential Provider. This action doesnâ€™t run on Google SecOps entities.","Script":"from typing import NoReturn\n\nfrom TIPCommon.base.action import Action\n\nimport constants\nfrom CyberArkCredentialProviderManager import (\n    CyberArkCredentialProviderManager,\n    CommandResult,\n)\nimport exceptions\nimport utils\n\n\nclass Ping(Action):\n    def __init__(self) -> None:\n        super().__init__(constants.PING_SCRIPT_NAME)\n        self.output_message = \"\"\n        self.error_output_message = (\n            \"Failed to connect to the CyberArk Credential Provider installation!\"\n        )\n\n    def _extract_action_parameters(self) -> None:\n        self.params.integration_parameters = utils.get_integration_parameters(\n            self.soar_action\n        )\n\n    def _init_api_clients(self) -> CyberArkCredentialProviderManager:\n        return utils.initialize_credential_provider_manager(self.soar_action)\n\n    def _perform_action(self, _) -> None:\n        result: CommandResult = self.api_client.test_connectivity()\n\n        if result.exit_code != 0:\n            raise exceptions.CyberArkCredentialProviderManagerError(\n                f\"{self.error_output_message}. Error is {result.error}\"\n            )\n        self.output_message = (\n            \"Successfully connected to the CyberArk Credential Provider \"\n            \"installation with the provided connection parameters!\"\n        )\n        self.logger.info(self.output_message)\n        self.logger.info(\"Starting action finalizing steps\")\n\n\ndef main() -> NoReturn:\n    Ping().run()\n\n\nif __name__ == \"__main__\":\n    main()\n","IntegrationIdentifier":"CyberArkCredentialProviderbeta","ScriptResultName":"is_success","DynamicResultsMetadata":null,"Creator":"admin","IsEnabled":true,"IsCustom":true,"IsSystem":false,"Version":1.0,"TimeoutSeconds":600,"IsAsync":null,"AsyncPollingIntervalInSeconds":3600,"TotalIntervalTimeoutForAsyncInSeconds":86400,"Parameters":[],"DefaultResultValue":null,"PythonVersion":"None","SimulationData":{"Entities":[]},"SimulationDataJson":"{\"Entities\": []}"}