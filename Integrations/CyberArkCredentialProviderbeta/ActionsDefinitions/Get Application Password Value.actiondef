{"Name":"Get Application Password Value","Description":"Use the Get Application Password Value to retrieve the application password value from CyberArk Credential Provider. Note: This action doesn't run on Google SecOps entities.","Script":"from typing import NoReturn\n\nfrom TIPCommon.base.action import Action\nfrom TIPCommon.extraction import extract_action_param\nfrom TIPCommon.transformation import convert_list_to_comma_string\nfrom TIPCommon.validation import ParameterValidator\n\nimport constants\nfrom CyberArkCredentialProviderManager import (\n    CyberArkCredentialProviderManager,\n    CommandResult,\n)\nimport exceptions\nimport utils\n\n\nclass GetApplicationPasswordValue(Action):\n\n    def __init__(self) -> None:\n        super().__init__(constants.GET_APPLICATION_PASSWORD_VALUE_SCRIPT_NAME)\n        self.output_message = \"\"\n        self.error_output_message = (\n            \"Error executing action \"\n            f'\"{constants.GET_APPLICATION_PASSWORD_VALUE_SCRIPT_NAME}\".'\n        )\n\n    def _extract_action_parameters(self) -> None:\n        self.params.integration_parameters = utils.get_integration_parameters(\n            self.soar_action\n        )\n        self.params.application_id = extract_action_param(\n            self.soar_action,\n            param_name=\"Application\",\n            print_value=True,\n            is_mandatory=True,\n        )\n        self.params.safe_name = extract_action_param(\n            self.soar_action,\n            param_name=\"Safe Name\",\n            print_value=True,\n            is_mandatory=True,\n        )\n        self.params.folder_name = extract_action_param(\n            self.soar_action,\n            param_name=\"Folder Name\",\n            print_value=True,\n            is_mandatory=False,\n        )\n        self.params.object_name = extract_action_param(\n            self.soar_action,\n            param_name=\"Object Name\",\n            print_value=True,\n            is_mandatory=True,\n        )\n        self.params.output_field = extract_action_param(\n            self.soar_action,\n            param_name=\"Output\",\n            default_value=constants.PASSWORD_OUTPUT_FIELD,\n            print_value=True,\n            is_mandatory=True,\n        )\n\n    def _init_api_clients(self) -> CyberArkCredentialProviderManager:\n        return utils.initialize_credential_provider_manager(self.soar_action)\n\n    def _validate_params(self) -> None:\n        utils.validate_ip_address(self.params.integration_parameters.docker_gateway_ip)\n\n        param_validator = ParameterValidator(self.soar_action)\n        self.params.new_output_field = param_validator.validate_csv(\n            param_name=\"Output\", csv_string=self.params.output_field\n        )\n\n    def _perform_action(self, _) -> None:\n        result: CommandResult = self.api_client.get_application_password(\n            application_id=self.params.application_id,\n            safe_name=self.params.safe_name,\n            folder_name=self.params.folder_name,\n            object_name=self.params.object_name,\n            output_field=convert_list_to_comma_string(self.params.new_output_field),\n        )\n\n        if result.error:\n            raise exceptions.CyberArkCredentialProviderManagerError(result.error)\n\n        if result.output:\n            self.soar_action.result.add_result_json({\"result\": result.output})\n            self.output_message: str = (\n                \"Successfully fetched password value for the application ID \"\n                f\"{self.params.application_id}.\"\n            )\n        else:\n            self.result_value: bool = False\n            self.output_message: str = (\n                \"The password value for the \"\n                f\"application ID {self.params.application_id} \"\n                \"was not found in the CyberArk Credential Provider.\"\n            )\n\n\ndef main() -> NoReturn:\n    GetApplicationPasswordValue().run()\n\n\nif __name__ == \"__main__\":\n    main()\n","IntegrationIdentifier":"CyberArkCredentialProviderbeta","ScriptResultName":"is_success","DynamicResultsMetadata":[{"ResultName":"JsonResult","ResultExample":"{\"result\": \"\\\"XXXX\\\"\"}","ShowResult":true}],"Creator":"admin","IsEnabled":true,"IsCustom":true,"IsSystem":false,"Version":1.0,"TimeoutSeconds":600,"IsAsync":null,"AsyncPollingIntervalInSeconds":3600,"TotalIntervalTimeoutForAsyncInSeconds":86400,"Parameters":[{"CustomActionId":0,"IsMandatory":true,"DefaultValue":"","Description":"The CyberArk Vault Object name to retrieve the password value.","Name":"Object Name","Value":"","Type":0,"OptionalValues":null,"OptionalValuesJson":null},{"CustomActionId":0,"IsMandatory":true,"DefaultValue":"Password","Description":"The output fields. This parameter accepts multiple values as a comma-separated string.","Name":"Output","Value":"Password","Type":0,"OptionalValues":null,"OptionalValuesJson":null},{"CustomActionId":0,"IsMandatory":true,"DefaultValue":"","Description":"The application ID to retrieve the password value.","Name":"Application","Value":"","Type":0,"OptionalValues":null,"OptionalValuesJson":null},{"CustomActionId":0,"IsMandatory":true,"DefaultValue":"","Description":"The CyberArk Vault Safe name to retrieve the password value.","Name":"Safe Name","Value":"","Type":0,"OptionalValues":null,"OptionalValuesJson":null},{"CustomActionId":0,"IsMandatory":false,"DefaultValue":"","Description":"The CyberArk Vault folder name to retrieve the password value.","Name":"Folder Name","Value":"","Type":0,"OptionalValues":null,"OptionalValuesJson":null}],"DefaultResultValue":null,"PythonVersion":"None","SimulationData":{"Entities":[]},"SimulationDataJson":"{\"Entities\": []}"}